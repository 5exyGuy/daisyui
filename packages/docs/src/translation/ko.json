{
  "__code": "KO",
  "__direction": "ltr",
  "__name": "한국어",
  "__status": "",
  "Code": "코드 모형",
  "Or": "또는",
  "cta-1-mobile": "컴포넌트",
  "components-btn": "컴포넌트",
  "components": "컴포넌트 개수",
  "Component": "컴포넌트",
  "Join": "조인",
  "Components": "컴포넌트",
  "Install": "설치하기",
  "Docs": "문서",
  "change-theme-btn": "테마",
  "themes": "테마 개수",
  "Themes": "테마",
  "pages": "페이지",
  "Store": "스토어",
  "Button": "버튼",
  "Swap": "스왑",
  "Alert": "주의",
  "Stat": "통계",
  "Checkbox": "체크박스",
  "Toggle": "토글",
  "Drawer": "서랍",
  "Mask": "마스킹",
  "Toast": "토스트",
  "Navigation": "내비게이션",
  "Link": "링크",
  "Menu": "메뉴",
  "Navbar": "내비게이션 바",
  "new": "출시",
  "Warning": "경고",
  "Type": "유형",
  "Search": "검색",
  "No_more_ugly_HTML_part_1": "못생긴",
  "Apply_your_own_design_decisions_part_2": "의",
  "Apply_your_own_design_decisions_part_3": "디자인",
  "Browser": "브라우저 모형",
  "Blog": "블로그",
  "etc.": "기타",
  "Stats": "통계",
  "cta-1": "컴포넌트 보기",
  "cta-2": "시작하기",
  "all-components-btn": "모든 컴포넌트 보기",
  "github-stars": "GitHub Stars",
  "npm-installs": "설치된 NPM 횟수",
  "install-title": "daisyUI 설치하기",
  "install-btn": "설치 가이드",
  "how-to-customize": "사용자 정의하는법",
  "links": "링크",
  "Use": "사용하기",
  "Colors": "색상",
  "Theme Generator": "테마 생성기",
  "Avatar": "아바타",
  "Card": "카드",
  "Chat bubble": "채팅 말풍선",
  "Progress": "진행 상황",
  "Tooltip": "툴팁",
  "Radio": "라디오 버튼",
  "Range": "범위 슬라이더",
  "Select": "선택",
  "Divider": "구분선",
  "Footer": "푸터",
  "Hero": "주인공",
  "Tab": "탭",
  "Mockup": "모형",
  "Window": "윈도우 창 모형",
  "Install daisyUI": "daisyUI를 설치하세요.",
  "Prev": "이전",
  "Next": "다음",
  "Tabs": "탭",
  "All daisyUI components": "모든 daisyUI 컴포넌트",
  "Class name": "클래스 이름",
  "daisyUI Theme Generator": "daisyUI 테마 생성기",
  "Preview": "미리보기",
  "homepage_h1": "더 빠르고, 더 깔끔하고, 더 쉽게 <br />Tailwind&nbsp;CSS 개발",
  "homepage_h2": "daisyUI는 당신이 사랑할 Tailwind CSS 플러그인입니다! <br/>유용한 컴포넌트 클래스 이름을 제공하여 <br/>적은 코드로 더 빠르게 구축할 수 있도록 돕습니다.",
  "In a Tailwind CSS project, you need to write utility class names for every element. Thousands of class names just to style the most basic elements.": "Tailwind CSS 프로젝트에서는 모든 요소에 대해 유틸리티 클래스 이름을 작성해야 합니다. 가장 기본적인 요소들에 스타일을 적용하기 위해 수천 개의 클래스 이름을 작성해야 합니다.",
  "instead of writing<br /> <span class='text-error'><span class='font-black'>100</span> class names</span>": "<br /> <span class='text-error'><span class='font-black'>100</span> 개의 클래스 이름</span>을 작성하는 것이 지겹지 않나요?",
  "For every element, every page, every project,<br/>again and again": "각 요소, 페이지, 프로젝트마다,<br/>다시, 또 다시",
  "use <span class='text-success'><span class='font-black'>semantic</span> <br />class names</span>": "<span class='text-success'><span class='font-black'>의미 있는</span> 클래스 이름</span>을 사용하세요",
  "It's descriptive, faster, cleaner and easier to maintain.": "간결하고 빠르고 깨끗하고 유지보수하기 쉽습니다.",
  "Features": "기능",
  "Links": "링크",
  "Message": "메시지",
  "Cleaner HTML": "깨끗한 HTML",
  "Customizable": "사용자 정의",
  "Themeable": "테마 지원",
  "Pure CSS": "순수 CSS",
  "Dashboard": "대시 보드",
  "Notifications": "알림",
  "Messages": "메시지",
  "People": "사람들",
  "Products": "제품",
  "Use Tailwind CSS but write fewer class names.": "Tailwind CSS 를 사용하지만 더 적은 클래스 이름으로 작성하세요.",
  "Pure CSS. <br />No JS dependency": "순수 CSS. <br />JS 의존성 없음",
  "Works on all frameworks": "모든 프레임 워크에서 작동합니다.",
  "Design system": "디자인 시스템",
  "Styling a simple button": "간단한 버튼 스타일링하기",
  "Result": "결과",
  "Take Tailwind CSS": "Tailwind CSS",
  "to the next level": "다음 단계로",
  "daisyUI adds class names to Tailwind CSS<br />for all common UI components.<br />Class names like": "daisyUI 는 Tailwind CSS 에 클래스 이름을 추가합니다.<br />모든 일반적인 UI 컴포넌트에 대해서.<br />이런 종류의 클래스 이름들이 있습니다.",
  "and many more.": "그리고 더 많은 것들",
  "This allows us to focus on important things<br />instead of styling basic elements for every project.": "이렇게 하면 프로젝트마다 기본 요소를 스타일링하는 대신<br />중요한 것에 집중할 수 있습니다.",
  "No_more_ugly_HTML_part_2": "HTML",
  "No_more_ugly_HTML_part_3": "은 더",
  "No_more_ugly_HTML_part_4": "이상",
  "Write fewer class names<br />Use component class names<br />modify them using Tailwind CSS utilities.": "클래스 이름을 적게 쓰세요<br />컴포넌트 클래스 이름을 사용하세요<br />Tailwind CSS 유틸리티를 사용해서 수정하세요.",
  "Click": "클릭",
  "Tailwind only": "Tailwind CSS만 사용",
  "Tailwind + daisyUI": "Tailwind CSS + daisyUI",
  "Save": "저장",
  "Accept terms of use": "이용 약관에 동의",
  "Submit to newsletter": "뉴스레터에 가입",
  "Fewer class names": "클래스 이름을 적게 쓰세요",
  "Faster development": "더 빠른 개발",
  "Smaller file size": "더 작은 파일 크기",
  "With daisyUI, you write 88% fewer class names<br />And your HTML size will be about 79% smaller.": "daisyUI를 사용하면 클래스 이름을 88% 더 적게 작성하고<br />HTML 크기를 약 79% 줄일 수 있습니다.",
  "CSS Class names": "CSS 클래스 이름",
  "fewer class names": "더 적은 클래스 이름",
  "HTML size": "HTML 크기",
  "smaller DOM size": "더 작은 DOM 크기",
  "Highly customizable": "매우 유연하게 사용할 수 있습니다",
  "Powered by Tailwind&nbsp;CSS utility&nbsp;classes": "Tailwind&nbsp;CSS 유틸리티&nbsp;클래스를 기반으로 합니다",
  "daisyUI is built on top of Tailwind&nbsp;CSS so you can customize everything using utility classes.": "daisyUI는 Tailwind&nbsp;CSS를 기반으로 합니다<br />따라서 유틸리티 클래스를 사용하여 모든 것을 사용자 정의할 수 있습니다",
  "Pure CSS.": "순수 CSS.",
  "Framework agnostic.": "프레임워크에 독립적.",
  "Works everywhere.": "어디에서나 작동합니다.",
  "daisyUI is a plugin for Tailwind CSS. It works on all JS frameworks and doesn't need a JS bundle file.": "daisyUI는 Tailwind CSS의 플러그인입니다. 모든 JS 프레임워크에서 작동하며 JS 번들 파일이 필요하지 않습니다.",
  "Install daisyUI as a dev dependency and use the class names just like any other Tailwind CSS class name.": "daisyUI를 dev dependency로 설치하고 다른 Tailwind CSS 클래스 이름과 마찬가지로 클래스 이름을 사용하십시오.",
  "Apply_your_own_design_decisions_part_1": "자신",
  "Apply_your_own_design_decisions_part_4": "결정",
  "Apply_your_own_design_decisions_part_5": "적용",
  "Your website should be unique. Create a custom theme for yourself using daisyUI theme generator. The colors you pick will be applied to all daisyUI components.": "당신의 웹사이트는 특별해야 합니다. daisyUI 테마 생성기를 사용하여 자신만의 테마를 만드세요. 당신이 선택한 색상은 모든 daisyUI 컴포넌트에 적용됩니다.",
  "Learn more about themes": "더 많은 테마 알아보기",
  "utility classes": "유틸리티 클래스",
  "endless possibilities": "무한한 가능성",
  "Mix and match daisyUI class names to create unique web pages.": "daisyUI 클래스 이름을 섞어 고유한 웹 페이지를 만드세요.",
  "daisyUI is the most popular<br />component library for Tailwind&nbsp;CSS": "daisyUI는 Tailwind&nbsp;CSS 의 가장 인기 있는<br />컴포넌트 라이브러리입니다.",
  "open-source projects using daisyUI": "daisyUI를 사용한 오픈소스 프로젝트",
  "Try daisyUI": "좋아하는 프레임워크에서",
  "on your favorite framework": "daisuUI를 사용해보세요",
  "See all examples": "모든 예제 보기",
  "Or play with daisyUI on": "또는 daisyUI를 사용해보기",
  "Semantic colors": "의미론적인 색상",
  "Get started": "지금 시작하기",
  "Loading": "로딩",
  "Utilities": "유틸리티",
  "Glass": "Glass",
  "how-to-install": "설치 방법",
  "config": "설정",
  "Config": "설정",
  "Modal": "모달",
  "Layout": "레이아웃",
  "You can also:": "이렇게도 할 수 있습니다.",
  "For example": "예를 들면",
  "Read more": "더 알아보기",
  "Typography": "타이포그래피",
  "Introduction": "소개",
  "How to use": "사용 방법",
  "color-system": "색상 시스템",
  "changelog": "변경 로그",
  "contributing": "기여하기",
  "Actions": "액션",
  "Dropdown": "드롭다운",
  "daisyUI themes": "daisyUI 테마",
  "Updates": "업데이트",
  "Diff": "Diff",
  "Sponsors": "스폰서",
  "Tailwind CSS Components": "Tailwind CSS 컴포넌트",
  "Rating": "평가",
  "updated": "변경",
  "Feedback": "피드백",
  "Badge": "뱃지",
  "Table": "표",
  "Responsive": "반응형",
  "CSS variables": "CSS variables",
  "Steps": "단계",
  "Reset": "초기화",
  "Also, using semantic color names makes theming easier. You wouldn't have to define dark-mode colors for every single element and you wouldn't be limited to only light/dark themes. you can have multiple themes available and each theme is just a few lines of CSS variables.": "게다가 시맨틱한 색상 이름을 사용하면 테마를 만들기도 더 쉽습니다. 모든 엘레먼트마다 다크 모드 색상을 지정할 필요가 없고 라이트/다크 테마에 제한받지 않습니다. 여러 개의 테마를 가질 수 있고 각 테마는 오직 몇 줄의 CSS 변수일 뿐입니다.",
  "license": "라이선스",
  "created-by": "만든 이",
  "Free and open-source": "무료이고 오픈소스입니다.",
  "Default config": "기본 설정값",
  "Skeleton": "스켈레톤",
  "Modifier": "수식자",
  "available-on": "여기에서 사용하기",
  "Border radius": "Border radius",
  "Benefits": "이점",
  "Collapse": "접기",
  "Accordion": "아코디언",
  "Accordion is used for showing and hiding content but only one item can stay open at a time.": "아코디언은 콘텐츠를 표시하고 숨기는 데 사용되지만 한 번에 하나의 항목만 열어 둘 수 있습니다.",
  "Using Accordion and Join together": "아코디언을 결합하여 사용하기",
  "All radio inputs with the same name work together and only one of them can be open at a time. If you have more than one set of accordion items on a page, use different names for the radio inputs on each set.": "동일한 이름을 가진 모든 라디오는 함께 작동하며 한 번에 한개만 열릴 수 있습니다. 한 페이지에 여러 개의 아코디언 항목 세트가 있는 경우, 각 세트의 라디오에 서로 다른 이름을 사용하세요.",
  "Alert informs users about important events.": "주의는 중요한 이벤트를 사용자에게 알려줍니다.",
  "Container element": "Container element",
  "Indicator": "표시자",
  "Avatars are used to show a thumbnail representation of an individual or business in the interface.": "아바타는 인터페이스에서 개인이나 기업을 대표하는 썸네일을 보여주는 데 사용됩니다.",
  "Badges are used to inform the user of the status of specific data.": "뱃지는 사용자에게 특정 데이터의 상태를 알리는 데 사용됩니다.",
  "Breadcrumbs": "위치 표시",
  "Breadcrumbs helps users to navigate through the website.": "위치 표시는 사용자들이 웹사이트를 탐색하는 것을 돕습니다.",
  "Buttons allow the user to take actions or make choices.": "버튼은 사용자들이 어떤 작업을 수행하거나 원하는 것을 선택할 수 있도록 합니다.",
  "Cards are used to group and display content in a way that is easily readable.": "카드는 쉽게 읽을 수 있는 방식으로 콘텐츠를 그룹화하고 표시하는 데 사용됩니다.",
  "Carousel": "캐러셀",
  "Carousel show images or content in a scrollable area.": "캐러셀은 스크롤 가능한 영역에 이미지 또는 콘텐츠를 표시합니다.",
  "Chat bubbles are used to show one line of conversation and all its data, including the author image, author name, time, etc.": "채팅 말풍선은 대화의 한 줄과 그 모든 데이터(작성자 이미지, 작성자 이름, 시간 등)를 표시하는 데 사용됩니다.",
  "Checkboxes are used to select or deselect a value.": "체크박스는 값을 선택하거나 선택을 취소하는 데 사용됩니다.",
  "Collapse is used for showing and hiding content.": "접기는 내용을 표시하거나 숨기는 데 사용됩니다.",
  "Countdown": "카운트다운",
  "Diff component shows a side-by-side comparison of two items.": "Diff 컴포넌트는 두 항목을 나란히 비교하여 보여줍니다.",
  "Divider will be used to separate content vertically or horizontally.": "구분선은 콘텐츠를 수직 또는 수평으로 구분하는 데 사용됩니다.",
  "Bottom navigation": "하단 탐색 바",
  "Drawer is a grid layout that can show/hide a sidebar on the left or right side of the page.": "서랍은 페이지의 왼쪽 또는 오른쪽에 사이드바를 표시하거나 숨길 수 있는 그리드 레이아웃입니다.",
  "Dropdown can open a menu or any other element when the button is clicked.": "드롭다운은 버튼을 클릭해 메뉴 또는 다른 요소를 열 수 있도록 합니다.",
  "More examples": "더 많은 예시",
  "File Input is a an input field for uploading files.": "파일 인풋은 파일을 업로드하는 데 사용되는 입력 필드입니다.",
  "File Input": "파일 인풋",
  "Phone": "핸드폰 모형",
  "Footer can contain logo, copyright notice, and links to other pages.": "바닥글에는 로고, 저작권 알림 및 다른 페이지에 대한 링크가 포함될 수 있습니다.",
  "Hero is a component for displaying a large box or image with a title and description.": "주인공은 제목과 설명이 있는 큰 상자 또는 이미지를 표시하는 구성 요소입니다.",
  "Indicators are used to place an element on the corner of another element.": "표시자는 다른 요소의 모서리에 요소를 배치하는 데 사용됩니다.",
  "Kbd": "키보드",
  "Text input": "텍스트 인풋",
  "Text Input is a simple input field.": "텍스트 인풋은 간단한 입력 필드입니다.",
  "Text Input": "텍스트 인풋",
  "Kbd is used to display keyboard shortcuts.": "키보드는 키보드 단축키를 표시하는 데 사용됩니다.",
  "Link adds the missing underline style to links.": "링크는 누락된 밑줄 스타일을 링크에 추가합니다.",
  "Loading shows an animation to indicate that something is loading.": "로딩은 무언가가 로딩 중임을 나타내는 애니메이션을 보여줍니다.",
  "Mask crops the content of the element to common shapes.": "마스킹은 요소의 내용을 공통된 모양으로 자릅니다.",
  "Menu is used to display a list of links vertically or horizontally.": "메뉴는 링크 목록을 수직 또는 수평으로 표시하는 데 사용됩니다.",
  "Browser mockup": "브라우저 모형",
  "Browser mockup shows a box that looks like a browser window.": "브라우저 모형은 브라우저 창처럼 보이는 상자를 보여줍니다.",
  "Code mockup is used to show a block of code in a box that looks like a code editor.": "코드 모형은 코드 편집기처럼 보이는 상자의 코드 블록을 표시하는 데 사용됩니다.",
  "Code mockup": "코드 모형",
  "Phone mockup shows a mockup of an iPhone.": "핸드폰 모형은 아이폰의 모형을 보여줍니다.",
  "Phone mockup": "핸드폰 모형",
  "Window mockup shows a box that looks like an operating system window.": "윈도우 창은 운영체제의 윈도우 창처럼 보이는 상자를 보여줍니다.",
  "Window mockup": "윈도우 창 모형",
  "Modal is used to show a dialog or a box when you click a button.": "모달은 단추를 클릭할 때 대화 상자나 상자를 표시하는 데 사용됩니다.",
  "Navbar is used to show a navigation bar on the top of the page.": "내비게이션 바는 페이지 상단에 탐색 막대를 표시하는 데 사용됩니다.",
  "Pagination": "페이지네이션",
  "Pagination is a group of buttons that allow the user to navigate between a set of related content.": "페이지네이션은 사용자가 관련 내용 집합 사이를 이동할 수 있도록 하는 단추 그룹입니다.",
  "Progress bar can be used to show the progress of a task or to show the passing of time.": "진행 상황은 작업의 진행률을 표시하거나 시간의 흐름을 표시하는 데 사용할 수 있습니다.",
  "Radial progress": "방사형 진행 상황",
  "Radial progress can be used to show the progress of a task or to show the passing of time.": "방사형 진행 상황은 작업의 진행 상황을 보여주거나 시간의 흐름을 보여주는 데 사용될 수 있습니다.",
  "Radio buttons allow the user to select one option from a set.": "라디오 버튼을 사용하여 세트에서 하나의 옵션을 선택할 수 있습니다.",
  "Range slider is used to select a value by sliding a handle.": "범위 슬라이더는 손잡이를 슬라이드하여 값을 선택하는 데 사용됩니다.",
  "Range slider": "범위 슬라이더",
  "Rating is a set of radio buttons that allow the user to rate something.": "평가는 사용자가 등급을 매길 수 있는 라디오 버튼의 집합입니다.",
  "Select is used to pick a value from a list of options.": "선택은 옵션 목록에서 값을 선택하는 데 사용됩니다.",
  "Skeleton is a component that can be used to show a loading state of a component.": "스켈레톤은 컴포넌트의 로딩 상태를 표시하는 데 사용할 수 있는 컴포넌트입니다.",
  "Stack": "스택",
  "Stack visually puts elements on top of each other.": "스택은 시각적으로 요소를 서로의 위에 배치합니다.",
  "Steps can be used to show a list of steps in a process.": "단계를 사용하여 프로세스의 단계 목록을 표시할 수 있습니다.",
  "Swap allows you to toggle the visibility of two elements using a checkbox or a class name.": "스왑을 사용하면 체크박스 또는 클래스 이름을 사용하여 두 요소의 가시성을 전환할 수 있습니다.",
  "Tabs can be used to show a list of links in a tabbed format.": "탭을 사용하여 탭 형식의 링크 목록을 표시할 수 있습니다.",
  "Table can be used to show a list of data in a table format.": "표를 사용하여 데이터 목록을 표 형식으로 표시할 수 있습니다.",
  "Textarea": "문자 입력 영역",
  "Textarea allows users to enter text in multiple lines.": "텍스트 영역에서는 텍스트를 여러 줄로 입력할 수 있습니다.",
  "Theme Controller": "테마 컨트롤러",
  "If a checked checkbox input or a checked radio input with theme-controller class exists in the page, The page will have the same theme as that input's value.": "If a checked checkbox input or a checked radio input with theme-controller class exists in the page, The page will have the same theme as that input's value.",
  "Timeline": "타임라인",
  "Timeline component shows a list of events in chronological order.": "타임라인 컴포넌트는 시간순으로 이벤트 목록을 보여줍니다.",
  "Toast is a wrapper to stack elements, positioned on the corner of page.": "토스트는 페이지의 모서리에 위치한 요소를 스택하는 래퍼입니다.",
  "Toggle is a checkbox that is styled to look like a switch button.": "토글은 스위치 버튼처럼 보이도록 스타일링된 체크박스입니다.",
  "Tooltip can be used to show a message when hovering over an element.": "툴팁을 사용하여 마우스가 요소 위를 호버할때 메시지를 표시할 수 있습니다.",
  "You don't need to install anything.": "아무것도 설치할 필요가 없습니다.",
  "Just add one of these to the <code>head</code> tag of your HTML": "다음 중 하나를 HTML에 <code>head</code> 태그로 추가하기만 하면 됩니다.",
  "Use daisyUI from CDN": "CDN으로 daisyUI 사용하기",
  "How to use daisyUI from a CDN?": "어떻게 CDN으로 daisyUI를 사용할 수 있나요?",
  "How to use daisyUI colors?": "daisyUI의 색상은 어떻게 사용하나요?",
  "daisyUI is fully themeable and colorable,": "daisyUI는 테마와 색상을 100% 적용할 수 있습니다,",
  "So instead of using constant color utility classes like:": "이렇게 상수 색상 유틸리티 클래스를 사용하는 대신에",
  "It's suggested to use semantic color utility classes like:": "이렇게 시맨틱한 색상 유틸리티 클래스를 사용하는 것을 권장합니다.",
  "Each color name contains CSS variables and each daisyUI theme applies color values to the utility classes when it is applied.": "각 색상 이름에는 CSS 변수가 포함되어 있고 각 daisyUI 테마는 유틸리티 클래스가 적용될 때 색상 값을 적용합니다.",
  "Semantic color names make more sense because when we design interfaces, we don't just use any random color. We define a specific color palette with names like <code>primary</code>, <code>secondary</code>, etc. and we only use those specific colors in our interfaces.": "시맨틱한 색상 이름은 더 이해하기 쉽습니다. 왜냐하면 인터페이스를 디자인 할 때 그저 임의의 색상을 사용하지 않기 때문입니다. 어떤 특정 색상 팔레트를 <code>primary</code>, <code>secondary</code> 등의 이름으로 정의해 놓으면 인터페이스에서 이 지정 색상들만 사용하게 됩니다.",
  "List of all daisyUI color names": "daisyUI의 모든 색상 이름 목록",
  "You can use these color names in your theme or in utility classes.": "이 색상 이름을 테마나 유틸리티 클래스에서 사용할 수 있습니다.",
  "Some daisyUI components come with modifier class names and that modifier class name will apply a color.": "어떤 daisyUI 컴포넌트는 수식하는 클래스 이름과 함께 제공되며 해당 클래스 이름은 색상을 적용합니다.",
  "You can also use color names in utility classes just like Tailwind's original color names.": "Tailwind의 기존 색상 이름과 같은 방법으로 유틸리티 클래스 내에서 색상 이름을 사용할 수도 있습니다.",
  "These are utility classes that can be used with a color name:": "색상 이름과 함께 사용될 수 있는 유틸리티 클래스들입니다.",
  "Unlimited themes": "무제한 테마",
  "Color utility classes": "Color utility classes",
  "excluded": "제외됨",
  "How to change the default configuration of daisyUI?": "daisyUI의 기본 설정값을 어떻게 변경하나요?",
  "List of themes": "테마 목록",
  "Customize components": "컴포넌트 사용자 정의",
  "Customize daisyUI components": "daisyUI 컴포넌트 커스터마이징하기",
  "How to customize daisyUI?": "daisyUI를 커스터마이징하는 방법",
  "daisyUI components come with many variants necessary for design systems and you won't usually need to customize anything.": "daisyUI 디자인 시스템에 필요한 다양한 유형의 컴포넌트를 제공하며, 일반적으로 어떤 것도 커스터마이징 할 필요가 없습니다.",
  "But you can still customize components in many ways.": "하지만 여전히 여러 방법으로 컴포넌트를 커스터마이징 할 수 있습니다.",
  "Let's say, you want to customize this button:": "이 버튼을 커스터마이징 하고 싶다면:",
  "You can use daisyUI utility classes:": "daisyUI 유틸리티 클래스를 사용해 커스터마이징 할 수 있습니다:",
  "You can use Tailwind's utility classes:": "Tailwind CSS 유틸리티 클래스를 사용해 커스터마이징 할 수 있습니다.",
  "You can customize components on your CSS file, using Tailwind's @apply directive:": "Tailwind CSS의 @apply를 이용해 당신만의 CSS로 커스터마이징 할 수도 있습니다.",
  "Tailwind Plugin": "Tailwind 플러그인으로 사용하기",
  "Install daisyUI as a Tailwind CSS plugin": "Tailwind CSS 플러그인으로 daisyUI 설치하기",
  "You need <a target=_blank' href='https://nodejs.org/en/download/'>Node.js</a> and <a target='_blank' href='https://tailwindcss.com/docs/installation/'>Tailwind CSS</a> installed.": "<a target=_blank' href='https://nodejs.org/en/download/'>Node.js</a>와 <a target='_blank' href='https://tailwindcss.com/docs/installation/'>Tailwind CSS</a>를 설치하셔야 합니다.",
  "How to install daisyUI as a Tailwind CSS plugin?": "Tailwind CSS 플러그인으로 daisyUI를 어떻게 설치하나요?",
  "See example setup of daisyUI and Tailwind CSS on different frameworks and build tools.": "각종 프레임워크와 빌드 도구에서 daisyUI와 Tailwind CSS를 설정하는 예제를 참고하세요.",
  "Layout and Typography": "레이아웃과 타이포그래피",
  "How to use layouts and typography in daisyUI": "daisyUI에서 레이아웃과 타이포그래피를 어떻게 사용하나요",
  "Layout, sizing, grids, spacing, etc. all will be handled by Tailwind CSS's utility classes.": "레이아웃, 크기 바꾸기, 그리드, 간격 띄우기, 등등. 모두 Tailwind CSS의 유틸리티 클래스로 처리됩니다.",
  "Try them:": "이 테마들을 사용해 보세요.",
  "How to use a theme only for a section of a page?": "특정 부분에서만 테마를 사용하려면 어떻게 하나요?",
  "Add <code>data-theme='THEME_NAME'</code> to any element and everything inside will have your theme.": "<code>data-theme='THEME_NAME'</code> 를 요소에 추가하면 그 안에 있는 모든 것에 이 테마가 적용될 것입니다.",
  "You can nest themes and there is no limit!": "테마를 제한없이 계속 중첩할 수 있습니다!",
  "You can force a section of your HTML to only use a specific theme.": "HTML의 어떤 부분이 오직 특정한 테마만을 사용하도록 강제할 수 있습니다.",
  "How to add a new custom theme?": "새로운 커스텀 테마는 어떻게 추가하나요?",
  "How to customize an existing theme?": "기존에 있는 테마는 어떻게 커스터마이징 하나요?",
  "How to use daisyUI themes?": "daisyUI 테마를 어떻게 사용하나요?",
  "How to add custom styles for a specific theme?": "특정 테마에 사용자 정의 스타일을 추가하는 방법은 무엇인가요?",
  "You can write custom style for your elements only for a specific theme.": "특정 테마의 요소에만 사용자 정의 스타일을 작성할 수도 있습니다.",
  "Add component classes to your HTML": "HTML에 컴포넌트 클래스 추가하기",
  "How to use daisyUI classes to style your page?": "페이지를 꾸미기 위해 daisyUI 클래스를 어떻게 사용하나요?",
  "Once you <a href='/docs/install/'>installed daisyUI</a>, you can use component classes like <code>btn</code>, <code>card</code>, etc.": "<a href='/docs/install/'>daisyUI를 설치하기만 하면</a>, <code>btn</code>, <code>card</code>와 같은 컴포넌트 클래스를 사용할 수 있습니다.",
  "So instead of making a button using only utility classes": "유틸리티 클래스만을 이용해 버튼을 만드는 것 대신",
  "You can just use a component class like this": "컴포넌트 클래스를 다음과 같이 사용할 수 있습니다.",
  "Then you can modify the component with daisyUI additional utility classes": "그리고 부가적인 daisyUI 유틸리티 클래스를 이용해 컴포넌트를 수정할 수 있습니다.",
  "Or you can modify the component with Tailwind CSS utility classes": "Tailwind CSS 유틸리티 클래스를 이용해서 컴포넌트를 수정할 수도 있습니다.",
  "Utility classes and CSS variables": "유틸리티 클래스과 CSS 변수",
  "All daisyUI colors can be used as utility classes. Just like any other Tailwind CSS color. For example you can use `primary` color with any of Tailwind CSS color utilities.": "All daisyUI colors can be used as utility classes. Just like any other Tailwind CSS color. For example you can use `primary` color with any of Tailwind CSS color utilities.",
  "Component specific CSS variables": "Component specific CSS variables",
  "These CSS variables are being used internally for a specific component": "이 CSS 변수들은 특정 컴포넌트의 내부에서 사용되고 있습니다.",
  "Artboard": "아트보드",
  "Input group": "인풋 그룹",
  "Deprecated": "지원 중단",
  "Randomize": "랜덤 선택",
  "To use a custom prefix, <a class='link' href='/docs/config/#prefix'>add your prefix string to config</a>": "커스텀한 접두어를 사용하기 위해, <a class='link' href='/docs/config/#prefix'>설정에 접두어 문자열을 추가하세요.</a>",
  "Do you have a question?": "질문이 있으신가요?",
  "Do you see a bug?": "버그를 발견하셨나요?",
  "Do you like daisyUI?": "daisyUI가 마음에 드시나요?",
  "Edit this page on GitHub": "GitHub에서 이 페이지 수정하기",
  "open an issue on GitHub": "GitHub에서 이슈 열기",
  "Contribute to translation": "번역에 기여하기",
  "Support daisyUI's development": "daisyUI 개발 지원",
  "footer-tagline": "유틸리티 우선 CSS 프레임워크를 위한 <br /> 무료 컴포넌트 라이브러리",
  "how-to-use-components": "컴포넌트 사용법",
  "how-to-use-themes": "테마 적용하는 법",
  "try-online": "온라인으로 사용해 보기",
  "related projects": "관련된 프로젝트들",
  "Become a sponsor": "후원자가 되세요",
  "Make your theme": "나만의 테마 만들기",
  "Admin panel": "관리자 패널",
  "with zero effort": "불필요한 노력 없이",
  "daisyUI adds a set of customizable color names to Tailwind CSS and these new colors use CSS variables for the values. Using daisyUI color names, you get Dark Mode and even more themes without adding a new class name.": "daisyUI는 Tailwind CSS에 사용자 정의 가능한 색상 이름 세트를 추가하며 이 새 색상은 값에 CSS 변수를 사용합니다. daisyUI 색상 이름을 사용하면 새 클래스 이름을 추가하지 않고도 다크 모드 및 더 많은 테마를 얻을 수 있습니다.",
  "See all themes": "모든 테마 보기",
  "Learn more about colors": "색상에 대해 자세히 알아보기",
  "install-step-1": "node 패키지로 daisyUI 설치하기",
  "install-step-2": "app.css 파일에 daisyUI 추가하기",
  "Built by the community": "커뮤니티에 의해 만들어졌습니다.",
  "daisyUI welcomes contributions from developers around the world": "daisyUI는 전세계의 개발자들의 기여를 환영합니다.",
  "Sponsors and backers": "후원자와 후원자들",
  "Layout & Typography": "레이아웃 & 타이포그래피",
  "Data display": "데이터 표시",
  "Data input": "데이터 인풋",
  "Button group": "버튼 그룹",
  "CodePen example page": "CodePen 예제 페이지",
  "Tailwind Play example page": "Tailwind Play 예제 페이지",
  "Use CDN": "CDN으로 사용하기",
  "daisyUI example repositories": "daisyUI 예제 레포지토리",
  "ask the community": "커뮤니티에 물어보기",
  "tweet about it!": "daisyUI에 대해서 트윗하세요!",
  "Add your own theme.": "나만의 테마 추가하기",
  "Config values explained": "설정값 설명",
  "If it's true, components will have colors and style so you won't need to design anything.": "이 값이 true라면, 컴포넌트에 색상과 스타일이 적용되어 아무것도 디자인할 필요가 없습니다.",
  "If it's false, components will have no color and no visual style so you can design your own style on a basic skeleton.": "이 값이 false라면, 컴포넌트에 어떤 색상과 스타일도 적용되어 있지 않아 당신만의 스타일을 디자인할 수 있습니다.",
  "If it's true, all themes will be included.": "이 값이 true라면, 모든 테마가 포함됩니다.",
  "If it's false, only light and dark themes will be available.": "이 값이 false라면, 라이트와 다크 테마만 사용할 수 있습니다.",
  "If it's an array, only themes in the array will be included and the first theme will be the default theme.": "이 값이 배열이라면, 배열 안의 테마만이 포함되며, 제일 첫번째 테마가 기본값이 됩니다.",
  "If it's true, daisyUI shows logs in the terminal while CSS is building.": "이 값이 true라면, CSS가 빌드되는 동안 터미널에 로그가 표시됩니다.",
  "Adds a prefix to class name for all daisyUI classes (including component classes, modifier classes and responsive classes).": "모든 daisyUI 클래스들에 클래스 이름 접두어를 추가합니다(컴포넌트 클래스, 수식자 클래스, 반응형 클래스를 포함합니다).",
  "If you're using a second CSS library that has similar class names, you can use this config to avoid conflicts.": "유사한 클래스 이름을 가진 두 번째 CSS 라이브러리를 사용하는 경우 이 설정값을 사용하여 충돌을 방지할 수 있습니다.",
  "Color name + description": "색상 이름 + 설명",
  "Required or optional for themes": "테마에 필수 또는 선택 사항",
  "Example use": "사용 예시",
  "daisyUI comes with a number of themes, which you can use with no extra effort.": "daisyUI는 추가적인 노력없이 바로 사용할 수 있는 다수의 테마를 가지고 있습니다.",
  "Each theme defines a set of colors which will be used on all daisyUI elements.": "각 테마는 모든 daisyUI 요소에 적용될 색상 세트를 정의합니다.",
  "How to remove unused themes?": "사용하지 않는 테마들은 어떻게 삭제하나요?",
  "You can only include the themes you want in your project.": "오직 당신의 프로젝트에 사용할 테마만을 포함시킵니다.",
  "This will reduce the size of your CSS file.": "이는 CSS 파일 크기를 줄여줍니다.",
  "In the below example": "아래 예시에서",
  "How to disable all themes?": "테마를 사용하지 않으려면 어떻게 하나요?",
  "In the below example, I have the required colors. All other colors will be generated automatically (Like the color of button when you focus on it or the color of text on a <code>primary</code> button).": "아래 예시를 보시면, 필수 색상들을 정의해 놓았습니다. 다른 색상들은 자동으로 생성될 것 입니다. (포커싱된 버튼의 색상이나 <code>primary</code> 버튼 위에 있는 텍스트 색상 등과 같은 다른 색상들이요).",
  "CSS variables in daisyUI themes": "daisyUI 테마의 CSS 변수들",
  "There are a few optional CSS variables that you can use in daisyUI themes to customize design decisions for each theme:": "daisyUI 테마에서 매 디자인 결정들을 커스텀할 수 있는 몇몇 선택적인 CSS 변수들이 있습니다.",
  "Custom CSS for a daisyUI theme": "daisyUI 테마의 CSS 커스터마이징하기",
  "You can apply custom style to a daisyUI themes using CSS:": "CSS를 이용해 커스터마이징한 스타일을 daisyUI 테마에 적용할 수 있습니다.",
  "Artboard provides fixed size container to display a demo content on mobile size.": "아트보드는 모바일 크기에서 데모 콘텐츠를 표시할 수 있는 고정 크기 컨테이너를 제공합니다.",
  "Bottom navigation bar allows navigation between primary screens.": "하단 탐색 바는 주요 화면 간의 탐색을 허용합니다.",
  "Button group shows buttons next to each other.": "버튼 그룹은 나란히 있는 버튼들을 보여줍니다.",
  "Countdown gives you a transition effect of changing numbers.": "카운트다운은 숫자를 변경할 때 전환 효과를 제공합니다.",
  "Input group puts an input next to a text or a button.": "인풋 그룹은 텍스트 또는 버튼 옆에 인풋을 배치합니다.",
  "Stat is used to show numbers and data in a box.": "통계는 상자에 숫자와 데이터를 표시하는 데 사용됩니다.",
  "You can also define optional colors to have more control on the color values (for example: the color of a button when it's focused on the color of the text on a button)": "선택적인 색상들을 정의해서 색상 값들에 더 많은 제어를 할 수 있습니다(예: 버튼의 텍스트 색상에 초점이 맞춰졌을 때 버튼 색상)",
  "It handles everything and it's fully customizable.": "모든 것을 처리할 수 있으며 커스터마이징이 가능합니다.",
  "daisyUI adds some style to @tailwindcss/typography so it will use the same theme as other elements.": "daisyUI는 @tailwindcss/typography에 몇몇 스타일을 추가해 서로 다른 요소들이 같은 테마를 사용할 수 있게 합니다.",
  "Changes the style of a component": "컴포넌트의 스타일 변경하기",
  "Supports responsive prefixes (sm:, lg:, …)": "반응형 접두어 지원 (sm:, lg:, …)",
  "daisyUI 3 is available now!": "daisyUI 3이 지금 사용 가능합니다!",
  "Join is a container for grouping multiple items, it can be used to group buttons, inputs, or any other element. Join applies border radius to the first and last item. Join can be used to create a horizontal or vertical list of items.": "조인은 여러 항목을 그룹화하기 위한 컨테이너로, 버튼, 입력 또는 기타 요소를 그룹화하는 데 사용할 수 있습니다. 조인은 첫 번째 항목과 마지막 항목에 테두리 반경을 적용합니다. 조인을 사용하면 항목의 가로 또는 세로 목록을 만들 수 있습니다.",
  "Join (group items)": "Join (group items)",
  "Resources": "Resources",
  "Active buttons": "Active buttons",
  "Outline buttons": "테두리 버튼",
  "Button sizes": "버튼 크기",
  "Responsive button": "반응형 버튼",
  "This button will have different sizes on different browser viewpoints": "이 버튼은 브라우저의 다양한 뷰포인트에서 크기가 다르게 표시됩니다.",
  "Wide button": "넓은 버튼",
  "Disabled buttons": "비활성화된 버튼",
  "Square button": "네모난 버튼",
  "Circle button": "동그란 버튼",
  "Icon at start": "Icon at start",
  "Button with loading spinner": "로딩 스피너가 들어간 버튼",
  "Click outside to close": "닫으려면 바깥 영역을 클릭하세요",
  "Dropdown menu": "드롭다운 메뉴",
  "Support daisyUI": "Support daisyUI",
  "Button block": "Button block",
  "Modal that closes when clicked outside": "바깥 영역을 클릭했을 때 닫히는 모달",
  "Modal using anchor link": "앵커 링크를 사용한 모달",
  "If you set max-width or the list gets larger than the container it will scroll": "If you set max-width or the list gets larger than the container it will scroll",
  "to join the items together and handle border radius automatically": "to join the items together and handle border radius automatically",
  "This collapse works with focus. When div loses focus, it gets closed": "This collapse works with focus. When div loses focus, it gets closed",
  "This collapse works with checkbox instead of focus. It needs to get clicked again to get closed.": "This collapse works with checkbox instead of focus. It needs to get clicked again to get closed.",
  "Use Tailwind CSS `group` and `group-focus` utilities to apply style when parent div is focused": "Tailwind CSS의 group 및 group-focus 유틸리티를 사용하면 부모 <div>에 포커스가 되었을 때 스타일을 적용할 수 있습니다.",
  "Use Tailwind CSS `peer` and `peer-checked` utilities to apply style when sibling checkbox is checked": "Tailwind CSS의 peer 및 peer-checked 유틸리티를 사용하여 형제 체크박스가 선택되었을 때 스타일을 적용하세요",
  "opens on click using ID.showModal() method. can be closed using ID.close() method": "opens on click using ID.showModal() method. can be closed using ID.close() method",
  "there is a second form with 'modal-backdrop' class and it covers the screen so we can close the modal when clicked outside": "there is a second form with 'modal-backdrop' class and it covers the screen so we can close the modal when clicked outside",
  "Dialog modal with custom width": "Dialog modal with custom width",
  "You can use any w-* and max-w-* utility class to customize the width": "You can use any w-* and max-w-* utility class to customize the width",
  "Modal works with a hidden checkbox and labels can toggle the checkbox so we can use another label tag with 'modal-backdrop' class that covers the screen so we can close the modal when clicked outside": "Modal works with a hidden checkbox and labels can toggle the checkbox so we can use another label tag with 'modal-backdrop' class that covers the screen so we can close the modal when clicked outside",
  "Dialog modal with a close button at corner": "모서리에 닫기 버튼이 있는 대화 상자 모달",
  "Instead of working with click, it shows swap-on item if you add swap-active class name. You can add or remove swap-active class using JS": "Instead of working with click, it shows swap-on item if you add swap-active class name. You can add or remove swap-active class using JS",
  "Install daisyUI as a Tailwind plugin": "daisyUI를 Tailwind 플러그인으로 설치하기",
  "Framework install tutorials": "프레임워크별 설치 튜토리얼",
  "Base style": "기본 스타일",
  "daisyUI base style": "daisyUI 기본 스타일",
  "daisyUI adds a few base styles to your page.": "daisyUI는 페이지에 몇 가지 기본 스타일을 추가합니다.",
  "daisyUI provides a few useful utility classes and CSS variables to help you use the library more effectively.": "daisyUI는 라이브러리를 보다 효과적으로 사용할 수 있도록 몇 가지 유용한 유틸리티 클래스와 CSS 변수를 제공합니다.",
  "1. Create a new Rsbuild project": "1. Create a new Rsbuild project",
  "2. Install Tailwind CSS and daisyUI": "2. Install Tailwind CSS and daisyUI",
  "Create a new Rsbuild project in the current directory": "Create a new Rsbuild project in the current directory",
  "Rsbuild has built-in support for PostCSS": "Rsbuild has built-in support for PostCSS",
  "Create a postcss.config.mjs file and add Tailwind CSS to it": "Create a postcss.config.mjs file and add Tailwind CSS to it",
  "Put Tailwind CSS and daisyUI in your CSS file at (and remove old styles).": "Put Tailwind CSS and daisyUI in your CSS file at (and remove old styles).",
  "Now you can use daisyUI class names!": "Now you can use daisyUI class names!",
  "1. Create a new WordPress project": "1. Create a new WordPress project",
  "2. Install the WindPress plugin": "2. Install the WindPress plugin",
  "3. Install daisyUI": "3. Install daisyUI",
  "Install WordPress according to the Official WordPress guide .": "Install WordPress according to the Official WordPress guide .",
  "In this guide, we will use the WindPress plugin to install Tailwind CSS and daisyUI in a WordPress project.": "In this guide, we will use the WindPress plugin to install Tailwind CSS and daisyUI in a WordPress project.",
  "Navigate to the sub-menu.": "Navigate to the sub-menu.",
  "Search for the WordPress plugin by typing in the search bar.": "Search for the WordPress plugin by typing in the search bar.",
  "Click the button to install the WordPress plugin.": "Click the button to install the WordPress plugin.",
  "Once the plugin is installed, click the button to activate the WindPress plugin.": "Once the plugin is installed, click the button to activate the WindPress plugin.",
  "Navigate to the WindPress dashboard by clicking the menu item in the WordPress admin sidebar.\nThen, click the file on the explorer sidebar to open the file editor.": "Navigate to the WindPress dashboard by clicking the menu item in the WordPress admin sidebar.\nThen, click the file on the explorer sidebar to open the file editor.",
  "Add daisyUI at the end of code in the file": "Add daisyUI at the end of code in the file",
  "1. Get Tailwind CSS executable": "1. Get Tailwind CSS executable",
  "2. Get daisyUI bundled JS file": "2. Get daisyUI bundled JS file",
  "3. Add Tailwind CSS and daisyUI": "3. Add Tailwind CSS and daisyUI",
  "4. Build CSS": "4. Build CSS",
  "Follow Tailwind CSS guide and get the latest version of Tailwind CSS executable.": "Follow Tailwind CSS guide and get the latest version of Tailwind CSS executable.",
  "Run this code to download latest version of daisyUI as a single js file and put it next to Tailwind's executable file.": "Run this code to download latest version of daisyUI as a single js file and put it next to Tailwind's executable file.",
  "Add Tailwind CSS and daisyUI to your CSS file. Address your HTML and other markup files in the function.": "Add Tailwind CSS and daisyUI to your CSS file. Address your HTML and other markup files in the function.",
  "Run this command to build the CSS file using Tailwind CSS executable": "Run this command to build the CSS file using Tailwind CSS executable",
  "1. Create a new React Router project": "1. Create a new React Router project",
  "2. Install daisyUI": "2. Install daisyUI",
  "3. Add daisyUI": "3. Add daisyUI",
  "Create a new React Router project in the current directory": "Create a new React Router project in the current directory",
  "Put Tailwind CSS and daisyUI in your CSS file (and remove old styles)": "Put Tailwind CSS and daisyUI in your CSS file (and remove old styles)",
  "1. Create a new Vue project": "1. Create a new Vue project",
  "Create a new Vite Vue project in the current directory": "Create a new Vite Vue project in the current directory",
  "Add Tailwind CSS to Vite config": "Add Tailwind CSS to Vite config",
  "1. Install": "1. Install",
  "2. Add Tailwind CSS and daisyUI": "2. Add Tailwind CSS and daisyUI",
  "3. Build CSS": "3. Build CSS",
  "Initialize a new Node project in the current directory using if it's not a Node project already.": "Initialize a new Node project in the current directory using if it's not a Node project already.",
  "Install PostCSS, Tailwind CSS, and daisyUI": "Install PostCSS, Tailwind CSS, and daisyUI",
  "Add a script to your package.json to build the CSS.": "Add a script to your package.json to build the CSS.",
  "Run the script to build the CSS file": "Run the script to build the CSS file",
  "This command creates a file with the compiled CSS. You can link this file to your HTML file.": "This command creates a file with the compiled CSS. You can link this file to your HTML file.",
  "1. Create a new Angular project": "1. Create a new Angular project",
  "2. Install Tailwind CSS, PostCSS, and daisyUI": "2. Install Tailwind CSS, PostCSS, and daisyUI",
  "Install Angular CLI globally": "Install Angular CLI globally",
  "Create a new Angular project called and navigate to it": "Create a new Angular project called and navigate to it",
  "Add Tailwind CSS plugin for PostCSS to a new file at root": "Add Tailwind CSS plugin for PostCSS to a new file at root",
  "Run the Angular development server": "Run the Angular development server",
  "1. Create a new Solid project": "1. Create a new Solid project",
  "Create a new Solid project in the current directory": "Create a new Solid project in the current directory",
  "1. Create a new Qwik project": "1. Create a new Qwik project",
  "Create a new Qwik project in the current directory": "Create a new Qwik project in the current directory",
  ":INFO:": ":INFO:",
  "This guide uses daisyUI as a Node.js dependency. If you don't want to use Node.js, try the CDN version of daisyUI .": "This guide uses daisyUI as a Node.js dependency. If you don't want to use Node.js, try the CDN version of daisyUI .",
  "Install Tailwind CSS CLI and daisyUI": "Install Tailwind CSS CLI and daisyUI",
  ":INFO: This guide uses daisyUI as a Node.js dependency. If you don't want to use Node.js, try the CDN version of daisyUI .": ":INFO: This guide uses daisyUI as a Node.js dependency. If you don't want to use Node.js, try the CDN version of daisyUI .",
  "1. Create a new Bun project": "1. Create a new Bun project",
  "2. Install bun-plugin-tailwind and daisyUI": "2. Install bun-plugin-tailwind and daisyUI",
  "3. Add HTML and CSS files": "3. Add HTML and CSS files",
  "Serve the HTML file": "Serve the HTML file",
  "Using Bun 1.2.4+ you can serve HTML and CSS files directly in a dev server . Here's how to setup daisyUI for it.": "Using Bun 1.2.4+ you can serve HTML and CSS files directly in a dev server . Here's how to setup daisyUI for it.",
  "Create a new Bun project in the current directory": "Create a new Bun project in the current directory",
  "Create a file at root and add bun-plugin-tailwind as a plugin": "Create a file at root and add bun-plugin-tailwind as a plugin",
  "Create at root": "Create at root",
  "Create at root, add Tailwind CSS and daisyUI": "Create at root, add Tailwind CSS and daisyUI",
  "1. Create a new SvelteKit project": "1. Create a new SvelteKit project",
  "Create a new SvelteKit project in the current directory": "Create a new SvelteKit project in the current directory",
  "Import the CSS file in your Svelte page (or layout)": "Import the CSS file in your Svelte page (or layout)",
  "1. Create a new Vite project": "1. Create a new Vite project",
  "Create a new Vite project in the current directory": "Create a new Vite project in the current directory",
  "1. Create a new Nuxt project": "1. Create a new Nuxt project",
  "Create a new Nuxt project in the current directory": "Create a new Nuxt project in the current directory",
  "1. Create a new Next.js project": "1. Create a new Next.js project",
  "Create a new Next.js project in the current directory": "Create a new Next.js project in the current directory",
  "Add Tailwind CSS to your PostCSS config file": "Add Tailwind CSS to your PostCSS config file",
  "1. Create a new Vike project": "1. Create a new Vike project",
  "Create a new Vike project in the current directory": "Create a new Vike project in the current directory",
  "1. Create a new Solid Start project": "1. Create a new Solid Start project",
  "Create a new Solid Start project in the current directory": "Create a new Solid Start project in the current directory",
  "1. Create a new Astro project": "1. Create a new Astro project",
  "Create a new Astro project in the current directory": "Create a new Astro project in the current directory",
  "Add Tailwind CSS to Astro config": "Add Tailwind CSS to Astro config",
  "Import the CSS file on top of your astro Layout file": "Import the CSS file on top of your astro Layout file",
  "1. Create a new React project": "1. Create a new React project",
  "Create a new Vite React project in the current directory": "Create a new Vite React project in the current directory",
  "1. Create a new Laravel project": "1. Create a new Laravel project",
  "3. Run your project": "3. Run your project",
  "Install PHP, Composer and Laravel Installer according to the official Laravel documentation": "Install PHP, Composer and Laravel Installer according to the official Laravel documentation",
  "Create a new Laravel project": "Create a new Laravel project",
  "Add daisyUI in your CSS file": "Add daisyUI in your CSS file",
  "Run your Laravel project": "Run your Laravel project",
  "And on another terminal tab, run Vite": "And on another terminal tab, run Vite",
  "1. Create a new Rails project": "1. Create a new Rails project",
  "2. Install Tailwind CSS for Rails": "2. Install Tailwind CSS for Rails",
  "4. Create a homepage in Rails": "4. Create a homepage in Rails",
  "5. Start Rails": "5. Start Rails",
  "Install Ruby on Rails according to the official Rails guide .": "Install Ruby on Rails according to the official Rails guide .",
  "Create a new Rails project": "Create a new Rails project",
  "Install Tailwind CSS 4 gem for Rails": "Install Tailwind CSS 4 gem for Rails",
  "There are 3 ways to add daisyUI to your Rails project": "There are 3 ways to add daisyUI to your Rails project",
  "This method is recommended if are already using Node.js. This works as a Tailwind CSS plugin so only the class names you need will be added to your CSS file.": "This method is recommended if are already using Node.js. This works as a Tailwind CSS plugin so only the class names you need will be added to your CSS file.",
  "Initialize a package.json (if you don't have one) and install daisyUI": "Initialize a package.json (if you don't have one) and install daisyUI",
  "This method is recommended if you are not using Node.js. This works as a Tailwind CSS plugin so only the class names you need will be added to your CSS file.": "This method is recommended if you are not using Node.js. This works as a Tailwind CSS plugin so only the class names you need will be added to your CSS file.",
  "Run this code to download latest version of daisyUI as a single js file": "Run this code to download latest version of daisyUI as a single js file",
  "This method is recommended if you want to quickly add daisyUI without adding any file.": "This method is recommended if you want to quickly add daisyUI without adding any file.",
  "You can choose the parts you need": "You can choose the parts you need",
  "You can import small CSS files separately": "You can import small CSS files separately",
  "You can import all themes or specific themes": "You can import all themes or specific themes",
  "Now you can use daisyUI class names! Let's create a simple page and try a button": "Now you can use daisyUI class names! Let's create a simple page and try a button",
  "What is daisyUI?": "What is daisyUI?",
  "How does daisyUI work?": "How does daisyUI work?",
  "Why should I use daisyUI?": "Why should I use daisyUI?",
  "What's the difference between daisyUI and Tailwind CSS?": "What's the difference between daisyUI and Tailwind CSS?",
  "Is daisyUI aligned with Tailwind CSS' utility-first philosophy?": "Is daisyUI aligned with Tailwind CSS' utility-first philosophy?",
  "How does daisyUI fit in Atomic Design principles?": "How does daisyUI fit in Atomic Design principles?",
  "Is daisyUI free?": "Is daisyUI free?",
  "How can I support daisyUI?": "How can I support daisyUI?",
  "Can I use daisyUI without Tailwind CSS?": "Can I use daisyUI without Tailwind CSS?",
  "Can I use daisyUI with other UI frameworks?": "Can I use daisyUI with other UI frameworks?",
  "Which frameworks can I use daisyUI with?": "Which frameworks can I use daisyUI with?",
  "daisyUI is a collection of CSS class names. These class names are a high-level abstraction of Tailwind CSS utility classes. Imagine you use Tailwind CSS with superpowers!": "daisyUI is a collection of CSS class names. These class names are a high-level abstraction of Tailwind CSS utility classes. Imagine you use Tailwind CSS with superpowers!",
  "daisyUI is a NPM package, you can install it as a dev dependency in your project. Then you add it to Tailwind CSS as a plugin. This makes all the daisyUI class names available to Tailwind CSS and you can use them like any other Tailwind CSS class names.": "daisyUI is a NPM package, you can install it as a dev dependency in your project. Then you add it to Tailwind CSS as a plugin. This makes all the daisyUI class names available to Tailwind CSS and you can use them like any other Tailwind CSS class names.",
  "daisyUI uses the Tailwind CSS plugin API to extend the available Tailwind CSS class names. This means that daisyUI is fully compatible with Tailwind CSS and you can use it with any Tailwind CSS project.": "daisyUI uses the Tailwind CSS plugin API to extend the available Tailwind CSS class names. This means that daisyUI is fully compatible with Tailwind CSS and you can use it with any Tailwind CSS project.",
  "daisyUI is for you if you:": "daisyUI is for you if you:",
  "Are tired of writing thousands of utility class names repeatedly": "Are tired of writing thousands of utility class names repeatedly",
  "Want more readable and maintainable code": "Want more readable and maintainable code",
  "Need to design interfaces faster with less code": "Need to design interfaces faster with less code",
  "Want a consistent design system across projects": "Want a consistent design system across projects",
  "Want to use standard UI parts, without making design decisions for every single detail": "Want to use standard UI parts, without making design decisions for every single detail",
  "Want dark mode and many other themes available out of the box": "Want dark mode and many other themes available out of the box",
  "Want to use a design system that is based on real-world UI design principles": "Want to use a design system that is based on real-world UI design principles",
  "Want development speed and customization at the same time": "Want development speed and customization at the same time",
  "daisyUI is not for you if you:": "daisyUI is not for you if you:",
  "Want to waste time re-inventing all the standard UI parts like buttons, cards, checkboxes, etc, for each project.": "Want to waste time re-inventing all the standard UI parts like buttons, cards, checkboxes, etc, for each project.",
  "Want to swim in the ocean of thousands of class names and never find your way out.": "Want to swim in the ocean of thousands of class names and never find your way out.",
  "Want to make your codebase a mess and spend hours figuring out what part of the code is responsible for what part of the UI.": "Want to make your codebase a mess and spend hours figuring out what part of the code is responsible for what part of the UI.",
  "Want to waste your time and money re-inventing the wheel instead of shipping your actual project.": "Want to waste your time and money re-inventing the wheel instead of shipping your actual project.",
  "Tailwind CSS provides low-level utility classes, which usually include only one CSS rule. daisyUI classes are a combination of multiple CSS rule that are named semantically for each part of the UI.": "Tailwind CSS provides low-level utility classes, which usually include only one CSS rule. daisyUI classes are a combination of multiple CSS rule that are named semantically for each part of the UI.",
  "For example Tailwind CSS class names decide if padding should be 4px or 8px. daisyUI class names decide if a HTML element should look like a \"card\", a \"button\", a \"toggle\", etc, just like what we would call them semantically in a design system.": "For example Tailwind CSS class names decide if padding should be 4px or 8px. daisyUI class names decide if a HTML element should look like a \"card\", a \"button\", a \"toggle\", etc, just like what we would call them semantically in a design system.",
  "This makes it easier to design interfaces with less code and more consistency. For example if you want to make a card using Tailwind CSS you would have to write one or multiple utility class names for each single CSS rule. Doing this over and over again for each element, for each page, for each project is time consuming and hard to manage. It also makes it harder to maintain your code as you have to always figure out what part of the code is responsible for what part of the UI.": "This makes it easier to design interfaces with less code and more consistency. For example if you want to make a card using Tailwind CSS you would have to write one or multiple utility class names for each single CSS rule. Doing this over and over again for each element, for each page, for each project is time consuming and hard to manage. It also makes it harder to maintain your code as you have to always figure out what part of the code is responsible for what part of the UI.",
  "daisyUI solves this problem by providing higher level class names that are named based on the UI parts. For example to make a card, we simply use the class name and daisyUI gives you all the necessary CSS rules to make a card. Then if you need additional customization, you can add Tailwind CSS utility classes to the element to make it look the way you want.": "daisyUI solves this problem by providing higher level class names that are named based on the UI parts. For example to make a card, we simply use the class name and daisyUI gives you all the necessary CSS rules to make a card. Then if you need additional customization, you can add Tailwind CSS utility classes to the element to make it look the way you want.",
  "daisyUI is not a replacement for Tailwind CSS, it's a plugin that makes Tailwind CSS more powerful and easier to use.": "daisyUI is not a replacement for Tailwind CSS, it's a plugin that makes Tailwind CSS more powerful and easier to use.",
  "Yes! It's utility-first, not utility-only.": "Yes! It's utility-first, not utility-only.",
  "daisyUI is built on top of Tailwind CSS's component API. Tailwind CSS as a library provides utility classes and suggests using utility classes for maximum flexibility and customization. However that's means slower development and more code to write. That's why many people find it hard to use Tailwind CSS for designing interfaces. It takes a professional designer to make design decisions for many details of the UI to make them look good. It also takes a lot of time to write all the utility class names for each part of the UI. Even copying and pasting those huge chunks of utility class names is not helpful, as it makes the codebase hard to read and maintain.": "daisyUI is built on top of Tailwind CSS's component API. Tailwind CSS as a library provides utility classes and suggests using utility classes for maximum flexibility and customization. However that's means slower development and more code to write. That's why many people find it hard to use Tailwind CSS for designing interfaces. It takes a professional designer to make design decisions for many details of the UI to make them look good. It also takes a lot of time to write all the utility class names for each part of the UI. Even copying and pasting those huge chunks of utility class names is not helpful, as it makes the codebase hard to read and maintain.",
  "Imagine one side of the spectrum is maximum customization and flexibility and you should make design decisions for every single detail. On the other side of the spectrum is maximum development speed and less code to write, but you have no control over the design. daisyUI and Tailwind CSS together give you the best of both worlds. Use daisyUI class names to write less code and develop faster, and use Tailwind CSS utility classes to customize the design when you need to.": "Imagine one side of the spectrum is maximum customization and flexibility and you should make design decisions for every single detail. On the other side of the spectrum is maximum development speed and less code to write, but you have no control over the design. daisyUI and Tailwind CSS together give you the best of both worlds. Use daisyUI class names to write less code and develop faster, and use Tailwind CSS utility classes to customize the design when you need to.",
  "Is it full circle? If you've been using Bootstrap many years ago, you may think it doesn't make sense to go back to using components.": "Is it full circle? If you've been using Bootstrap many years ago, you may think it doesn't make sense to go back to using components.",
  "But here's the catch: The problem with Bootstrap was not class names! Bootstrap class names were actually really fast to work with. The problem was lack of customization and flexibility. At some point every Bootstrap website looked the same unless you open a CSS file and write tons of custom CSS. Tailwind CSS solves this problem of customization and flexibility but the cost is slower development and more code to write! You wanted customization and flexibility? Good luck making design decisions for every single pixel in your page! Not a practical approach, right?": "But here's the catch: The problem with Bootstrap was not class names! Bootstrap class names were actually really fast to work with. The problem was lack of customization and flexibility. At some point every Bootstrap website looked the same unless you open a CSS file and write tons of custom CSS. Tailwind CSS solves this problem of customization and flexibility but the cost is slower development and more code to write! You wanted customization and flexibility? Good luck making design decisions for every single pixel in your page! Not a practical approach, right?",
  "We need customization development speed at the same time. daisyUI is here to make this possible.": "We need customization development speed at the same time. daisyUI is here to make this possible.",
  "Atomic Design is a methodology for creating design systems. It breaks down the UI into smaller parts, like atoms, molecules, organisms, etc.": "Atomic Design is a methodology for creating design systems. It breaks down the UI into smaller parts, like atoms, molecules, organisms, etc.",
  "You can think of Tailwind CSS utility classes as atoms. They are the smallest parts of the UI that you can use to build larger parts. daisyUI classes are like molecules and organisms. They are higher-level abstractions of the UI parts that are made of atoms.": "You can think of Tailwind CSS utility classes as atoms. They are the smallest parts of the UI that you can use to build larger parts. daisyUI classes are like molecules and organisms. They are higher-level abstractions of the UI parts that are made of atoms.",
  "Larger parts of the UI, like templates and pages are quickly possible by putting these molecules and organisms together in layouts, using grid or flexbox, and adding functionality and content to them.": "Larger parts of the UI, like templates and pages are quickly possible by putting these molecules and organisms together in layouts, using grid or flexbox, and adding functionality and content to them.",
  "Yes, daisyUI is free and open-source, under the MIT license. You can use it in any project, commercial or non-commercial, without any restrictions.": "Yes, daisyUI is free and open-source, under the MIT license. You can use it in any project, commercial or non-commercial, without any restrictions.",
  "Why is it free? daisyUI's goal is to improve the web development experience for everyone. I believe web development is already complex enough with all the different technologies, frameworks and tools. It takes a lot of time and effort to learn and master all these tools. daisyUI is here to make the design part of web development easier and faster, so you can focus on the actual product you are building.": "Why is it free? daisyUI's goal is to improve the web development experience for everyone. I believe web development is already complex enough with all the different technologies, frameworks and tools. It takes a lot of time and effort to learn and master all these tools. daisyUI is here to make the design part of web development easier and faster, so you can focus on the actual product you are building.",
  "You can support daisyUI by using it in your projects, sharing it with your friends and colleagues, and contributing to the project on GitHub. You can also support daisyUI by becoming a sponsor on GitHub or Open Collective.": "You can support daisyUI by using it in your projects, sharing it with your friends and colleagues, and contributing to the project on GitHub. You can also support daisyUI by becoming a sponsor on GitHub or Open Collective.",
  "Yes, daisyUI can be used standalone without Tailwind CSS. However, it's recommended to use daisyUI with Tailwind CSS. Here's why: daisyUI provides pieces of UI you can use to make a website. Like Button, Toggle, Card, etc. You need something to glue these pieces together! For example you need flex box, grid, padding, margin, etc. Tailwind CSS provides these low-level utility classes that you can use to glue the UI pieces together. So daisyUI and Tailwind CSS are a perfect match. You can use daisyUI to design the UI parts and Tailwind CSS for layout, spacing, font-size and other low-level CSS rules.": "Yes, daisyUI can be used standalone without Tailwind CSS. However, it's recommended to use daisyUI with Tailwind CSS. Here's why: daisyUI provides pieces of UI you can use to make a website. Like Button, Toggle, Card, etc. You need something to glue these pieces together! For example you need flex box, grid, padding, margin, etc. Tailwind CSS provides these low-level utility classes that you can use to glue the UI pieces together. So daisyUI and Tailwind CSS are a perfect match. You can use daisyUI to design the UI parts and Tailwind CSS for layout, spacing, font-size and other low-level CSS rules.",
  "Alternatively if you don't want to use Tailwind CSS, you can use daisyUI for components and write your own styles for layout, spacing, etc.": "Alternatively if you don't want to use Tailwind CSS, you can use daisyUI for components and write your own styles for layout, spacing, etc.",
  "Yes, you can mix and match daisyUI with any UI framework that add styles based on class names. If there's any class name conflict, you can use prefix to avoid conflicts between two libraries.": "Yes, you can mix and match daisyUI with any UI framework that add styles based on class names. If there's any class name conflict, you can use prefix to avoid conflicts between two libraries.",
  "ALL of them! daisyUI is framework agnostic. You can use it anywhere you can use CSS.": "ALL of them! daisyUI is framework agnostic. You can use it anywhere you can use CSS.",
  "root": "root",
  "include": "include",
  "exclude": "exclude",
  "prefix": "prefix",
  "logs": "logs",
  "daisyUI can be configured from your CSS file.": "daisyUI can be configured from your CSS file.",
  "Replace the semicolon after with brackets and add the configuration inside the brackets.": "Replace the semicolon after with brackets and add the configuration inside the brackets.",
  "Default config:": "Default config:",
  "In above example, we have 4 themes: , , , and . nord is the default theme, abyss is the default theme for dark mode, and cupcake and dracula are available to use with and .": "In above example, we have 4 themes: , , , and . nord is the default theme, abyss is the default theme for dark mode, and cupcake and dracula are available to use with and .",
  "In above example, we enable all themes.": "In above example, we enable all themes.",
  "In above example, we disable all themes. it's useful to disable all themes and add custom themes using": "In above example, we disable all themes. it's useful to disable all themes and add custom themes using",
  "In above example, we set dracula as the default theme. setting one value like this means only one theme will be available. Unless you add custom themes using": "In above example, we set dracula as the default theme. setting one value like this means only one theme will be available. Unless you add custom themes using",
  "In above example, we set the CSS variables on instead of . This way all daisyUI global CSS variables will be scoped to . This is useful to use daisyUI in a scoped environment like a web component or a shadow DOM or a specific part of the page.": "In above example, we set the CSS variables on instead of . This way all daisyUI global CSS variables will be scoped to . This is useful to use daisyUI in a scoped environment like a web component or a shadow DOM or a specific part of the page.",
  "In above example, we only include the button, input, and select components. All other styles of daisyUI library will be excluded. Here are the file names you can include or exclude .": "In above example, we only include the button, input, and select components. All other styles of daisyUI library will be excluded. Here are the file names you can include or exclude .",
  "In above example, we exclude the style which is added to the when a modal or drawer is open.": "In above example, we exclude the style which is added to the when a modal or drawer is open.",
  "In above example, we exclude the the listed files. All other parts of daisyUI will be available to use. This is useful if you want to opt out of some parts of daisyUI or if you want to mix daisyUI for some parts and another library for the rest. Here are the file names you can include or exclude .": "In above example, we exclude the the listed files. All other parts of daisyUI will be available to use. This is useful if you want to opt out of some parts of daisyUI or if you want to mix daisyUI for some parts and another library for the rest. Here are the file names you can include or exclude .",
  "In above example, all daisyUI classes will be prefixed with . For example, will be .": "In above example, all daisyUI classes will be prefixed with . For example, will be .",
  "In above example, we disable the logs of daisyUI. This is useful if you want to clean up the console output.": "In above example, we disable the logs of daisyUI. This is useful if you want to clean up the console output.",
  "Default value": "Default value",
  "Description": "Description",
  "light --default, dark --prefersdark": "light --default, dark --prefersdark",
  "string or comma separated list or `false` or `all`": "string or comma separated list or `false` or `all`",
  "List of themes to enable. Use `false` to disable all themes. Use `all` to enable all themes. Add `--default` flag next to a theme name to set it as default theme. Add `--prefersdark` flag next to a theme name to set it as default theme for dark mode.": "List of themes to enable. Use `false` to disable all themes. Use `all` to enable all themes. Add `--default` flag next to a theme name to set it as default theme. Add `--prefersdark` flag next to a theme name to set it as default theme for dark mode.",
  "\":root\"": "\":root\"",
  "string": "string",
  "The CSS selector to receive the CSS variables.": "The CSS selector to receive the CSS variables.",
  "comma separated list": "comma separated list",
  "List of components to include.": "List of components to include.",
  "List of components to exclude.": "List of components to exclude.",
  "\"\"": "\"\"",
  "Prefix for all daisyUI classes.": "Prefix for all daisyUI classes.",
  "true": "true",
  "boolean": "boolean",
  "Enable or disable logs.": "Enable or disable logs.",
  "Class names are not working": "Class names are not working",
  "CSS files is too big": "CSS files is too big",
  "checkbox/toggle/radio styles are broken": "checkbox/toggle/radio styles are broken",
  "Themes are not working": "Themes are not working",
  "Tailwind's prefix is not working": "Tailwind's prefix is not working",
  "Make sure you're not using dynamic class names (half-variable like ). If you do this, there is no way for Tailwind CSS to find your class names.": "Make sure you're not using dynamic class names (half-variable like ). If you do this, there is no way for Tailwind CSS to find your class names.",
  "Try using Explicitly register sources": "Try using Explicitly register sources",
  "Using Tailwind CSS and daisyUI, it is expected for CSS files to be very small. Ideally only the class names you used must be in the CSS file. Sometimes (specially in monorepos) it is possible that Tailwind CSS automatic class name detection finds some unwanted strings in your project and generate styles for them. To avoid this, you can disable automatic detection and register your source files using directive.": "Using Tailwind CSS and daisyUI, it is expected for CSS files to be very small. Ideally only the class names you used must be in the CSS file. Sometimes (specially in monorepos) it is possible that Tailwind CSS automatic class name detection finds some unwanted strings in your project and generate styles for them. To avoid this, you can disable automatic detection and register your source files using directive.",
  "Probably you're using (or another style or plugin) that is affecting form elements. daisyUI applies styles to class names but by default, applies styles to all form elements. If you really need alongside with daisyUI (which I doubt, because both are doing the same job) consider using its config so it only applies style to the elements with specific class name (not all form elements)": "Probably you're using (or another style or plugin) that is affecting form elements. daisyUI applies styles to class names but by default, applies styles to all form elements. If you really need alongside with daisyUI (which I doubt, because both are doing the same job) consider using its config so it only applies style to the elements with specific class name (not all form elements)",
  "Add the themes you want": "Add the themes you want",
  "Enable a theme using on your tag:": "Enable a theme using on your tag:",
  "If you're using a custom theme make sure you're using all the required CSS variables": "If you're using a custom theme make sure you're using all the required CSS variables",
  "With daisyUI, you don't need to manually set colors using variant As long as you use daisyUI colors they will work on all themes, light or dark. If you really want to use Tailwind's variant, here's how to do it .": "With daisyUI, you don't need to manually set colors using variant As long as you use daisyUI colors they will work on all themes, light or dark. If you really want to use Tailwind's variant, here's how to do it .",
  ":": ":",
  "Theme CSS variables": "Theme CSS variables",
  "All daisyUI colors can be used as utility classes. Just like any other Tailwind CSS color. For example you can use color with any of Tailwind CSS color utilities.": "All daisyUI colors can be used as utility classes. Just like any other Tailwind CSS color. For example you can use color with any of Tailwind CSS color utilities.",
  "Read more about color names .": "Read more about color names .",
  "You can use to set the background color to the primary color and to set the text color to the primary color.": "You can use to set the background color to the primary color and to set the text color to the primary color.",
  "You can also control the opacity of the color like": "You can also control the opacity of the color like",
  "Tailwind CSS provides fixed values for border radius, such as , , , etc. daisyUI provides a few more border radius values which are tokenized for components and can be customized based on the theme.": "Tailwind CSS provides fixed values for border radius, such as , , , etc. daisyUI provides a few more border radius values which are tokenized for components and can be customized based on the theme.",
  "Change the theme to see the border radius changes:": "Change the theme to see the border radius changes:",
  "creates a glass effect on the element.": "creates a glass effect on the element.",
  "These CSS variables can be customized for each themes. Read more about color names .": "These CSS variables can be customized for each themes. Read more about color names .",
  "For advanced use: These CSS variables are being used internally for a specific components. You probably won't need to customize them, but you can if you want to.": "For advanced use: These CSS variables are being used internally for a specific components. You probably won't need to customize them, but you can if you want to.",
  "If you are using a prefix for daisyUI, these CSS variables will be prefixed with that prefix as well. For example if prefix is , The CSS variable will be .": "If you are using a prefix for daisyUI, these CSS variables will be prefixed with that prefix as well. For example if prefix is , The CSS variable will be .",
  "These variables are for internal use. They are not subject of semantic versioning and some of them may be modified or removed in future minor versions, in which case your custom styles might lose their effect, so if you want to modify these variables and your UI really depends on the customized value, make sure you are using a fixed version of daisyUI, not the latest version.": "These variables are for internal use. They are not subject of semantic versioning and some of them may be modified or removed in future minor versions, in which case your custom styles might lose their effect, so if you want to modify these variables and your UI really depends on the customized value, make sure you are using a fixed version of daisyUI, not the latest version.",
  ":INFO: These variables are for internal use. They are not subject of semantic versioning and some of them may be modified or removed in future minor versions, in which case your custom styles might lose their effect, so if you want to modify these variables and your UI really depends on the customized value, make sure you are using a fixed version of daisyUI, not the latest version.": ":INFO: These variables are for internal use. They are not subject of semantic versioning and some of them may be modified or removed in future minor versions, in which case your custom styles might lose their effect, so if you want to modify these variables and your UI really depends on the customized value, make sure you are using a fixed version of daisyUI, not the latest version.",
  "Class Name": "Class Name",
  "bg-primary": "bg-primary",
  "Sets the background color to the primary color": "Sets the background color to the primary color",
  "to-primary": "to-primary",
  "Sets the ending color for a gradient to the primary color": "Sets the ending color for a gradient to the primary color",
  "via-primary": "via-primary",
  "Sets the middle color for a gradient to the primary color": "Sets the middle color for a gradient to the primary color",
  "from-primary": "from-primary",
  "Sets the starting color for a gradient to the primary color": "Sets the starting color for a gradient to the primary color",
  "text-primary": "text-primary",
  "Sets the text color to the primary color": "Sets the text color to the primary color",
  "ring-primary": "ring-primary",
  "Sets the ring color to the primary color": "Sets the ring color to the primary color",
  "fill-primary": "fill-primary",
  "Sets the fill color for SVG elements to the primary color": "Sets the fill color for SVG elements to the primary color",
  "caret-primary": "caret-primary",
  "Sets the caret color to the primary color": "Sets the caret color to the primary color",
  "stroke-primary": "stroke-primary",
  "Sets the stroke color for SVG elements to the primary color": "Sets the stroke color for SVG elements to the primary color",
  "border-primary": "border-primary",
  "Sets the border color to the primary color": "Sets the border color to the primary color",
  "divide-primary": "divide-primary",
  "Sets the color for dividing borders to the primary color": "Sets the color for dividing borders to the primary color",
  "accent-primary": "accent-primary",
  "Sets the accent color to the primary color": "Sets the accent color to the primary color",
  "shadow-primary": "shadow-primary",
  "Sets the shadow color to the primary color": "Sets the shadow color to the primary color",
  "outline-primary": "outline-primary",
  "Sets the outline color to the primary color": "Sets the outline color to the primary color",
  "decoration-primary": "decoration-primary",
  "Sets the text decoration color to the primary color": "Sets the text decoration color to the primary color",
  "placeholder-primary": "placeholder-primary",
  "Sets the placeholder text color to the primary color": "Sets the placeholder text color to the primary color",
  "ring-offset-primary": "ring-offset-primary",
  "Sets the ring offset color to the primary color": "Sets the ring offset color to the primary color",
  "CSS Variable": "CSS Variable",
  "rounded-box": "rounded-box",
  "var(--radius-box)": "var(--radius-box)",
  "For large sized components like card, modal, alert, etc.": "For large sized components like card, modal, alert, etc.",
  "rounded-field": "rounded-field",
  "var(--radius-field)": "var(--radius-field)",
  "For medium sized components like button, input, select, tab, etc.": "For medium sized components like button, input, select, tab, etc.",
  "rounded-selector": "rounded-selector",
  "var(--radius-selector)": "var(--radius-selector)",
  "For small sized components like checkbox, toggle, badge, etc.": "For small sized components like checkbox, toggle, badge, etc.",
  "Primary brand color": "Primary brand color",
  "Foreground content color to use on primary color": "Foreground content color to use on primary color",
  "Secondary brand color": "Secondary brand color",
  "Foreground content color to use on secondary color": "Foreground content color to use on secondary color",
  "Accent brand color": "Accent brand color",
  "Foreground content color to use on accent color": "Foreground content color to use on accent color",
  "Neutral dark color": "Neutral dark color",
  "Foreground content color to use on neutral color": "Foreground content color to use on neutral color",
  "Base color of page, used for blank backgrounds": "Base color of page, used for blank backgrounds",
  "Base color, darker shade": "Base color, darker shade",
  "Base color, even more darker shade": "Base color, even more darker shade",
  "Foreground content color to use on base color": "Foreground content color to use on base color",
  "Info color": "Info color",
  "Foreground content color to use on info color": "Foreground content color to use on info color",
  "Success color": "Success color",
  "Foreground content color to use on success color": "Foreground content color to use on success color",
  "Warning color": "Warning color",
  "Foreground content color to use on warning color": "Foreground content color to use on warning color",
  "Error color": "Error color",
  "Foreground content color to use on error color": "Foreground content color to use on error color",
  "Border radius for selectors like checkbox, toggle, badge, etc": "Border radius for selectors like checkbox, toggle, badge, etc",
  "Border radius for fields like input, select, tab, etc": "Border radius for fields like input, select, tab, etc",
  "Border radius for boxes like card, modal, alert, etc": "Border radius for boxes like card, modal, alert, etc",
  "Base scale size for selectors like checkbox, toggle, badge, etc": "Base scale size for selectors like checkbox, toggle, badge, etc",
  "Base scale size for fields like input, select, tab, etc": "Base scale size for fields like input, select, tab, etc",
  "Border width of all components": "Border width of all components",
  "(binary) Adds a depth effect for relevant components": "(binary) Adds a depth effect for relevant components",
  "(binary) Adds a background noise effect for relevant components": "(binary) Adds a background noise effect for relevant components",
  "color of the alert": "color of the alert",
  "color of the badge": "color of the badge",
  "size of the badge": "size of the badge",
  "background color of the button": "background color of the button",
  "foreground color of the button": "foreground color of the button",
  "shadow of the button": "shadow of the button",
  "noise background of the button if enabled": "noise background of the button if enabled",
  "padding of the button": "padding of the button",
  "size of the button": "size of the button",
  "padding of the card body": "padding of the card body",
  "font size of the card body": "font size of the card body",
  "font size of the card title": "font size of the card title",
  "size of the checkbox": "size of the checkbox",
  "value of the countdown": "value of the countdown",
  "margin of the divider": "margin of the divider",
  "vertical position of the anchor": "vertical position of the anchor",
  "horizontal position of the anchor": "horizontal position of the anchor",
  "File input": "File input",
  "color of the file input": "color of the file input",
  "size of the file input": "size of the file input",
  "top position of the indicator": "top position of the indicator",
  "bottom position of the indicator": "bottom position of the indicator",
  "start position of the indicator": "start position of the indicator",
  "end position of the indicator": "end position of the indicator",
  "vertical position of the indicator": "vertical position of the indicator",
  "horizontal position of the indicator": "horizontal position of the indicator",
  "Input": "Input",
  "color of the input": "color of the input",
  "size of the input": "size of the input",
  "size of the kbd": "size of the kbd",
  "List": "List",
  "grid columns of the list": "grid columns of the list",
  "foreground color of the active menu item": "foreground color of the active menu item",
  "background color of the active menu item": "background color of the active menu item",
  "top left border radius of the modal": "top left border radius of the modal",
  "top right border radius of the modal": "top right border radius of the modal",
  "bottom left border radius of the modal": "bottom left border radius of the modal",
  "bottom right border radius of the modal": "bottom right border radius of the modal",
  "value of the radial progress": "value of the radial progress",
  "size of the radial progress": "size of the radial progress",
  "thickness of the radial progress": "thickness of the radial progress",
  "for calculating the radial progress position": "for calculating the radial progress position",
  "size of the radio": "size of the radio",
  "background color of the range slider thumb": "background color of the range slider thumb",
  "color of the range slider thumb": "color of the range slider thumb",
  "size of the range slider thumb": "size of the range slider thumb",
  "color of the range slider progress": "color of the range slider progress",
  "binary, whether to fill the range slider progress or not": "binary, whether to fill the range slider progress or not",
  "padding of the range slider thumb": "padding of the range slider thumb",
  "size of the range slider": "size of the range slider",
  "size of the select": "size of the select",
  "height of the tabs": "height of the tabs",
  "direction of the tabs": "direction of the tabs",
  "padding of the tab": "padding of the tab",
  "background color of the tab": "background color of the tab",
  "border color of the tab": "border color of the tab",
  "start start border radius of the tab": "start start border radius of the tab",
  "start end border radius of the tab": "start end border radius of the tab",
  "end start border radius of the tab": "end start border radius of the tab",
  "end end border radius of the tab": "end end border radius of the tab",
  "Order of the tab": "Order of the tab",
  "minimum border radius of the lift tab": "minimum border radius of the lift tab",
  "all padding values of the lift tab": "all padding values of the lift tab",
  "all border color values of the lift tab": "all border color values of the lift tab",
  "corner width of the lift tab": "corner width of the lift tab",
  "corner height of the lift tab": "corner height of the lift tab",
  "corner position of the lift tab": "corner position of the lift tab",
  "inset position of the lift tab": "inset position of the lift tab",
  "border radius for the corner of the lift tab": "border radius for the corner of the lift tab",
  "margin of the tab content": "margin of the tab content",
  "start start border radius of the tab content": "start start border radius of the tab content",
  "start end border radius of the tab content": "start end border radius of the tab content",
  "end start border radius of the tab content": "end start border radius of the tab content",
  "end end border radius of the tab content": "end end border radius of the tab content",
  "order of the tab content": "order of the tab content",
  "size of the textarea": "size of the textarea",
  "start position of the timeline row": "start position of the timeline row",
  "end position of the timeline row": "end position of the timeline row",
  "start position of the timeline column": "start position of the timeline column",
  "end position of the timeline column": "end position of the timeline column",
  "horizontal position of the toast": "horizontal position of the toast",
  "vertical position of the toast": "vertical position of the toast",
  "padding of the toggle": "padding of the toggle",
  "size of the toggle": "size of the toggle",
  "background color of the tooltip": "background color of the tooltip",
  "offset of the tooltip": "offset of the tooltip",
  "position of the tooltip tail": "position of the tooltip tail",
  "blur of the glass effect": "blur of the glass effect",
  "opacity of the glass effect": "opacity of the glass effect",
  "degree of the glass reflection": "degree of the glass reflection",
  "opacity of the glass reflection": "opacity of the glass reflection",
  "opacity of the glass border": "opacity of the glass border",
  "opacity of the glass text shadow": "opacity of the glass text shadow",
  "start start border radius of the join": "start start border radius of the join",
  "start end border radius of the join": "start end border radius of the join",
  "end start border radius of the join": "end start border radius of the join",
  "end end border radius of the join": "end end border radius of the join",
  "Every part of daisyUI is available on CDN as separate CSS files.": "Every part of daisyUI is available on CDN as separate CSS files.",
  "Color opacity and muted colors": "Color opacity and muted colors",
  "bg-green-500": "bg-green-500",
  "bg-orange-600": "bg-orange-600",
  "bg-blue-700": "bg-blue-700",
  "bg-secondary": "bg-secondary",
  "bg-accent": "bg-accent",
  "Example of theming a div with hardcoded color values": "Example of theming a div with hardcoded color values",
  "Using hardcoded color names": "Using hardcoded color names",
  "🪦 Fixed color names, hardcoded based on the value": "🪦 Fixed color names, hardcoded based on the value",
  "🚫 No automatic dark mode": "🚫 No automatic dark mode",
  "😵‍💫 You have to add dark-mode colors for every element": "😵‍💫 You have to add dark-mode colors for every element",
  "💸 high maintenance cost": "💸 high maintenance cost",
  "🐢 slow development": "🐢 slow development",
  "😩 hard to change a theme": "😩 hard to change a theme",
  "⛓️‍💥 high chance of inconsistency": "⛓️‍💥 high chance of inconsistency",
  "😰 You are limited to 2 themes only: light and dark": "😰 You are limited to 2 themes only: light and dark",
  "Using semantic color names": "Using semantic color names",
  "🎯 Semantic names, based on the purpose of the color": "🎯 Semantic names, based on the purpose of the color",
  "✨ Automatic dark mode": "✨ Automatic dark mode",
  "🌓 No need to add any dark-mode class names": "🌓 No need to add any dark-mode class names",
  "🤑 Zero maintenance cost to add a theme": "🤑 Zero maintenance cost to add a theme",
  "🚀 Fast development": "🚀 Fast development",
  "⚡️ Easy to change themes": "⚡️ Easy to change themes",
  "📘 All colors are consistent based on the design system": "📘 All colors are consistent based on the design system",
  "♾️ Unlimited themes, easy to switch": "♾️ Unlimited themes, easy to switch",
  "These components automatically set the correct background color, text color, border color, etc as needed so you don't need to set those colors manually. For example sets color for background and border, and sets color for the text automatically as default. You can customize them using utility classes if you want to change the color.": "These components automatically set the correct background color, text color, border color, etc as needed so you don't need to set those colors manually. For example sets color for background and border, and sets color for the text automatically as default. You can customize them using utility classes if you want to change the color.",
  "So you can use , , etc. Read more about daisyUI color utility classes .": "So you can use , , etc. Read more about daisyUI color utility classes .",
  "is the the text color of the page by default. It's a dark color on light themes and it's a light color on dark themes.": "is the the text color of the page by default. It's a dark color on light themes and it's a light color on dark themes.",
  "Sometimes we need a muted text. something with less contrast. The best way to do this is using Tailwind CSS color opacity modifier by adding a (or any other value) to the end of color name. Like": "Sometimes we need a muted text. something with less contrast. The best way to do this is using Tailwind CSS color opacity modifier by adding a (or any other value) to the end of color name. Like",
  "The advantage of using opacity is that it gives a constant result on all themes, for all colors. You can use it with any opacity value, you can use it for any color. For example primary-content:": "The advantage of using opacity is that it gives a constant result on all themes, for all colors. You can use it with any opacity value, you can use it for any color. For example primary-content:",
  "Color name": "Color name",
  "CSS variable": "CSS variable",
  "Where to use": "Where to use",
  "primary": "primary",
  "Primary brand color, The main color of your brand": "Primary brand color, The main color of your brand",
  "primary-content": "primary-content",
  "secondary": "secondary",
  "Secondary brand color, The optional, secondary color of your brand": "Secondary brand color, The optional, secondary color of your brand",
  "secondary-content": "secondary-content",
  "accent": "accent",
  "Accent brand color, The optional, accent color of your brand": "Accent brand color, The optional, accent color of your brand",
  "accent-content": "accent-content",
  "neutral": "neutral",
  "Neutral dark color, For not-saturated parts of UI": "Neutral dark color, For not-saturated parts of UI",
  "neutral-content": "neutral-content",
  "base-100": "base-100",
  "Base surface color of page, used for blank backgrounds": "Base surface color of page, used for blank backgrounds",
  "base-200": "base-200",
  "Base color, darker shade, to create elevations": "Base color, darker shade, to create elevations",
  "base-300": "base-300",
  "Base color, even more darker shade, to create elevations": "Base color, even more darker shade, to create elevations",
  "base-content": "base-content",
  "info": "info",
  "Info color, For informative/helpful messages": "Info color, For informative/helpful messages",
  "info-content": "info-content",
  "Foreground content color to use on `info` color": "Foreground content color to use on `info` color",
  "success": "success",
  "Success color, For success/safe messages": "Success color, For success/safe messages",
  "success-content": "success-content",
  "Foreground content color to use on `success` color": "Foreground content color to use on `success` color",
  "warning": "warning",
  "Warning color, For warning/caution messages": "Warning color, For warning/caution messages",
  "warning-content": "warning-content",
  "Foreground content color to use on `warning` color": "Foreground content color to use on `warning` color",
  "error": "error",
  "Error color, For error/danger/destructive messages": "Error color, For error/danger/destructive messages",
  "error-content": "error-content",
  "Foreground content color to use on `error` color": "Foreground content color to use on `error` color",
  "CSS Class": "CSS Class",
  "Also available on CDN [/colors/properties.css](https://cdn.jsdelivr.net/npm/daisyui@5/colors/properties.css)": "Also available on CDN [/colors/properties.css](https://cdn.jsdelivr.net/npm/daisyui@5/colors/properties.css)",
  "Also available on CDN [/colors/properties-extended.css](https://cdn.jsdelivr.net/npm/daisyui@5/colors/properties-extended.css)": "Also available on CDN [/colors/properties-extended.css](https://cdn.jsdelivr.net/npm/daisyui@5/colors/properties-extended.css)",
  "Enable a built-in theme": "Enable a built-in theme",
  "Enable all themes": "Enable all themes",
  "Disable a theme": "Disable a theme",
  "You can manage themes by adding brackets in front of in your CSS file.": "You can manage themes by adding brackets in front of in your CSS file.",
  "is a comma-separated list of theme names you want to enable. You can set flag for a theme to make it the default theme. You can also set flag for a theme to make it the default theme for dark mode (prefers-color-scheme: dark).": "is a comma-separated list of theme names you want to enable. You can set flag for a theme to make it the default theme. You can also set flag for a theme to make it the default theme for dark mode (prefers-color-scheme: dark).",
  "By default, and themes are enabled. Let's enable theme:": "By default, and themes are enabled. Let's enable theme:",
  "And set theme for the page:": "And set theme for the page:",
  "To disable theme for example, remove it from the list. Now only light theme is included:": "To disable theme for example, remove it from the list. Now only light theme is included:",
  "If for some reason you want to disable all themes and remove all daisyUI colors, set to :": "If for some reason you want to disable all themes and remove all daisyUI colors, set to :",
  "To add a new theme, use in your CSS file, with the following structure:": "To add a new theme, use in your CSS file, with the following structure:",
  "To customize a built-in theme, you can use the same structure as adding a new theme, but with the same name as the built-in theme. For example, to customize the theme:": "To customize a built-in theme, you can use the same structure as adding a new theme, but with the same name as the built-in theme. For example, to customize the theme:",
  "All the other values will be inherited from the original theme.": "All the other values will be inherited from the original theme.",
  "Tailwind CSS Typography plugin demo": "Tailwind CSS Typography plugin demo",
  "Headers: Making a Statement": "Headers: Making a Statement",
  "The Big Heading, for the Page Title": "The Big Heading, for the Page Title",
  "Second Heading, for the Page Subtitle": "Second Heading, for the Page Subtitle",
  "Third Heading, usually for the Section Title": "Third Heading, usually for the Section Title",
  "Fourth Heading, usually for the Subsection Title": "Fourth Heading, usually for the Subsection Title",
  "Fifth Heading, for the Subsubsection Title": "Fifth Heading, for the Subsubsection Title",
  "Sixth Heading, for the Paragraph Title": "Sixth Heading, for the Paragraph Title",
  "Text Formatting: Adding Emphasis": "Text Formatting: Adding Emphasis",
  "Bold and Italic": "Bold and Italic",
  "Blockquotes": "Blockquotes",
  "Lists: Organizing Information": "Lists: Organizing Information",
  "Unordered Lists": "Unordered Lists",
  "Ordered Lists": "Ordered Lists",
  "Links and Images: Adding Interactivity": "Links and Images: Adding Interactivity",
  "Images": "Images",
  "Code: Showcasing Your Work": "Code: Showcasing Your Work",
  "Inline Code": "Inline Code",
  "Code Blocks": "Code Blocks",
  "Tables: Organizing Data": "Tables: Organizing Data",
  "Colors: Adding Vibrancy": "Colors: Adding Vibrancy",
  "Conclusion": "Conclusion",
  "Layout, sizing, grids, spacing, etc. all will be handled by Tailwind CSS's utility classes. Read more at Tailwind CSS documentation: Layout , Sizing , Flexbox , Grid , Box alignment , Spacing": "Layout, sizing, grids, spacing, etc. all will be handled by Tailwind CSS's utility classes. Read more at Tailwind CSS documentation: Layout , Sizing , Flexbox , Grid , Box alignment , Spacing",
  "daisyUI supports the TailwindCSS Typography plugin All parts are compatible with daisyUI themes.": "daisyUI supports the TailwindCSS Typography plugin All parts are compatible with daisyUI themes.",
  "Here's a demo text to demonstrate the Tailwind CSS Typography plugin in combination with daisyUI colors:": "Here's a demo text to demonstrate the Tailwind CSS Typography plugin in combination with daisyUI colors:",
  "This is a demo of the Tailwind CSS Typography plugin in action. The plugin provides a set of prose classes that can be used to style your HTML content with minimal effort. When combined with daisyUI, you get access to a variety of themes that are fully compatible with the Typography plugin.": "This is a demo of the Tailwind CSS Typography plugin in action. The plugin provides a set of prose classes that can be used to style your HTML content with minimal effort. When combined with daisyUI, you get access to a variety of themes that are fully compatible with the Typography plugin.",
  "Headers are essential for structuring your content and making it easy to read. With Tailwind CSS Typography and daisyUI, you can create headers that stand out and match your chosen theme.": "Headers are essential for structuring your content and making it easy to read. With Tailwind CSS Typography and daisyUI, you can create headers that stand out and match your chosen theme.",
  "Text formatting is crucial for emphasizing important information. Tailwind CSS Typography makes it simple to apply bold, italic, and other text styles.": "Text formatting is crucial for emphasizing important information. Tailwind CSS Typography makes it simple to apply bold, italic, and other text styles.",
  "Bold text is perfect for highlighting key points.": "Bold text is perfect for highlighting key points.",
  "Italic text is great for emphasizing specific words.": "Italic text is great for emphasizing specific words.",
  "Bold and Italic text can be used for extra emphasis.": "Bold and Italic text can be used for extra emphasis.",
  "Blockquotes are an excellent way to highlight quotes or important information. They are styled beautifully with the Typography plugin.": "Blockquotes are an excellent way to highlight quotes or important information. They are styled beautifully with the Typography plugin.",
  "\"This is a blockquote. It stands out and draws attention to important information. In HTML, blockquotes are created using the tag. When used with the Typography plugin and daisyUI, blockquotes receive special styling that includes indentation and a different background color - making quoted text visually distinct from the rest of the content. This styling helps create clear visual hierarchy and improves readability while maintaining semantic HTML markup.\"": "\"This is a blockquote. It stands out and draws attention to important information. In HTML, blockquotes are created using the tag. When used with the Typography plugin and daisyUI, blockquotes receive special styling that includes indentation and a different background color - making quoted text visually distinct from the rest of the content. This styling helps create clear visual hierarchy and improves readability while maintaining semantic HTML markup.\"",
  "Lists are a great way to organize information in a structured manner. Tailwind CSS Typography makes it easy to create both unordered and ordered lists.": "Lists are a great way to organize information in a structured manner. Tailwind CSS Typography makes it easy to create both unordered and ordered lists.",
  "Unordered lists use bullet points to list items. They are perfect for listing items without a specific order.": "Unordered lists use bullet points to list items. They are perfect for listing items without a specific order.",
  "First item": "First item",
  "Second item": "Second item",
  "Subitem one": "Subitem one",
  "Subitem two": "Subitem two",
  "Ordered lists use numbers to list items. They are ideal for steps or items that need to be in a specific order.": "Ordered lists use numbers to list items. They are ideal for steps or items that need to be in a specific order.",
  "Step one": "Step one",
  "Step two": "Step two",
  "Substep one": "Substep one",
  "Substep two": "Substep two",
  "Links are essential for navigation and adding interactivity to your content. Tailwind CSS Typography ensures that links are styled consistently.": "Links are essential for navigation and adding interactivity to your content. Tailwind CSS Typography ensures that links are styled consistently.",
  "Visit daisyUI": "Visit daisyUI",
  "Images are a great way to enhance your content visually. The Typography plugin makes sure they are displayed beautifully.": "Images are a great way to enhance your content visually. The Typography plugin makes sure they are displayed beautifully.",
  "Code snippets are crucial for technical content. Tailwind CSS Typography provides excellent styling for both inline code and code blocks.": "Code snippets are crucial for technical content. Tailwind CSS Typography provides excellent styling for both inline code and code blocks.",
  "Inline code is perfect for highlighting small pieces of code within a sentence.": "Inline code is perfect for highlighting small pieces of code within a sentence.",
  "Here is an example of inline code:": "Here is an example of inline code:",
  "Code blocks are ideal for displaying larger pieces of code. You can use Shiki, Prism or other libraries for code highlighting.": "Code blocks are ideal for displaying larger pieces of code. You can use Shiki, Prism or other libraries for code highlighting.",
  "Tables are essential for organizing data in rows and columns. Tailwind CSS Typography ensures that tables are styled consistently and look great.": "Tables are essential for organizing data in rows and columns. Tailwind CSS Typography ensures that tables are styled consistently and look great.",
  "daisyUI provides various color schemes that you can use to add vibrancy to your content. Here are some examples:": "daisyUI provides various color schemes that you can use to add vibrancy to your content. Here are some examples:",
  "Primary text": "Primary text",
  "Secondary text": "Secondary text",
  "Accent text": "Accent text",
  "Info text": "Info text",
  "Success text": "Success text",
  "Warning text": "Warning text",
  "Error text": "Error text",
  "Styling your Markdown-generated HTML has never been easier, thanks to the Tailwind CSS Typography plugin and daisyUI themes. By using headers, text formatting, lists, links, images, code snippets, tables, and colors, you can create rich and visually appealing content with minimal effort. Experiment with these elements and see how they look with different daisyUI themes. Happy styling!": "Styling your Markdown-generated HTML has never been easier, thanks to the Tailwind CSS Typography plugin and daisyUI themes. By using headers, text formatting, lists, links, images, code snippets, tables, and colors, you can create rich and visually appealing content with minimal effort. Experiment with these elements and see how they look with different daisyUI themes. Happy styling!",
  "Second item Subitem one Subitem two": "Second item Subitem one Subitem two",
  "Step two Substep one Substep two": "Step two Substep one Substep two",
  "Italic": "Italic",
  "Bold": "Bold",
  "Feature": "Feature",
  "Status": "Status",
  "Tailwind CSS": "Tailwind CSS",
  "Utility-first CSS framework": "Utility-first CSS framework",
  "Active": "Active",
  "daisyUI": "daisyUI",
  "Tailwind CSS component library": "Tailwind CSS component library",
  "Tailwind CSS plugin for styling HTML": "Tailwind CSS plugin for styling HTML",
  "Markdown": "Markdown",
  "Lightweight markup language": "Lightweight markup language",
  "Popular": "Popular",
  "Various themes for styling": "Various themes for styling",
  "Available": "Available",
  "Source code": "Source code",
  "These are the tiny base styles that daisyUI adds to your page. These styles are less than a kilobyte in total, so you don't need to worry about the size": "These are the tiny base styles that daisyUI adds to your page. These styles are less than a kilobyte in total, so you don't need to worry about the size",
  "If you want to opt out of each part, you can do it by setting the config . For example, to opt out of the scrollbar-gutter and style, scrollbar-color, you can exclude it like this:": "If you want to opt out of each part, you can do it by setting the config . For example, to opt out of the scrollbar-gutter and style, scrollbar-color, you can exclude it like this:",
  "Or if you're using CDN, you can disable it from your customized CDN file if you need to.": "Or if you're using CDN, you can disable it from your customized CDN file if you need to.",
  "properties": "properties",
  "rootcolor": "rootcolor",
  "scrollbar": "scrollbar",
  "rootscrolllock": "rootscrolllock",
  "rootscrollgutter": "rootscrollgutter",
  "svg": "svg",
  "Name": "Name",
  "For necessary at-rules, like variable type for `--radialprogress`": "For necessary at-rules, like variable type for `--radialprogress`",
  "For `:root` and `[data-theme]` it sets background-color to `base-100` and text color to `base-content`": "For `:root` and `[data-theme]` it sets background-color to `base-100` and text color to `base-content`",
  "Sets scrollbar-color for `:root`": "Sets scrollbar-color for `:root`",
  "Sets `:root` to `overflow: hidden` when modal or drawer is open": "Sets `:root` to `overflow: hidden` when modal or drawer is open",
  "Adds a `scrollbar-gutter` to `:root` when modal or drawer is open, to avoid layout shift": "Adds a `scrollbar-gutter` to `:root` when modal or drawer is open, to avoid layout shift",
  "Contains small SVG images for noise filter, chat bubble tail mask, and tooltip tail mask. Can be disabled to use custom images.": "Contains small SVG images for noise filter, chat bubble tail mask, and tooltip tail mask. Can be disabled to use custom images.",
  "VSCode and Copilot": "VSCode and Copilot",
  "Cursor": "Cursor",
  "Zed": "Zed",
  "daisyui.com/llms.txt file is a compact, text version of daisyUI docs to help AI generate accurate daisyUI code based on your prompt. Here's how to use daisyUI llms.txt in your code editor:": "daisyui.com/llms.txt file is a compact, text version of daisyUI docs to help AI generate accurate daisyUI code based on your prompt. Here's how to use daisyUI llms.txt in your code editor:",
  "Copilot can generate daisyUI code for you. Add daisyUI's llms.txt file to your repo so that Copilot can use it by default.": "Copilot can generate daisyUI code for you. Add daisyUI's llms.txt file to your repo so that Copilot can use it by default.",
  "Run this command to save the llms.txt file to": "Run this command to save the llms.txt file to",
  "In Add this:": "In Add this:",
  "Press ⌘ CMD + ⇧ Shift + P . Or if it's Windows, press ⌃ Ctrl + ⇧ Shift + P .": "Press ⌘ CMD + ⇧ Shift + P . Or if it's Windows, press ⌃ Ctrl + ⇧ Shift + P .",
  "Add this:": "Add this:",
  "Now in chat window you can type to provide daisyUI docs to Cursor.": "Now in chat window you can type to provide daisyUI docs to Cursor.",
  "In chat window type this and press Enter ↵": "In chat window type this and press Enter ↵",
  "One Two Three": "One Two Three",
  "One Two": "One Two",
  "K": "K",
  "Xsmall Small Medium Large Xlarge": "Xsmall Small Medium Large Xlarge",
  "Press F to pay respects.": "Press F to pay respects.",
  "ctrl + shift + del": "ctrl + shift + del",
  "⌘ ⌥ ⇧ ⌃": "⌘ ⌥ ⇧ ⌃",
  "There are 3 methods to use a dropdowns": "There are 3 methods to use a dropdowns",
  "Method 1. details and summary": "Method 1. details and summary",
  "Method 2. popover API and anchor positioning": "Method 2. popover API and anchor positioning",
  "Method 3. CSS focus": "Method 3. CSS focus",
  "Positions": "Positions",
  "Modifiers": "Modifiers",
  "details and summary elements": "details and summary elements",
  "popover API and anchor positioning": "popover API and anchor positioning",
  "CSS focus": "CSS focus",
  "details and summary are native HTML elements that can be used to create dropdowns. Dropdown using details and summary opens and closes the content when the summary is clicked. You can also open/close it using JS by adding/removing the attribute": "details and summary are native HTML elements that can be used to create dropdowns. Dropdown using details and summary opens and closes the content when the summary is clicked. You can also open/close it using JS by adding/removing the attribute",
  "Popover API is the new HTML standard for creating dropdowns. It opens the dropdown on a top layer, which means there's no need to z-index management and there's no overflow issue. Anchor positioning is a new CSS standard for positioning elements relative to an anchor.": "Popover API is the new HTML standard for creating dropdowns. It opens the dropdown on a top layer, which means there's no need to z-index management and there's no overflow issue. Anchor positioning is a new CSS standard for positioning elements relative to an anchor.",
  "is the unique ID of the popover content. / is the unique name of the anchor.": "is the unique ID of the popover content. / is the unique name of the anchor.",
  "CSS Anchor Positioning is a new standard but isn't yet supported in Firefox and Safari ( caniuse.com ). In those browsers, the dropdown will appear centered like a modal. There's also this polyfill that can be helpful.": "CSS Anchor Positioning is a new standard but isn't yet supported in Firefox and Safari ( caniuse.com ). In those browsers, the dropdown will appear centered like a modal. There's also this polyfill that can be helpful.",
  "The content gets displayed when the button is focused.": "The content gets displayed when the button is focused.",
  "Why div? Safari has a CSS bug since 2008 that prevents button elements from being focused, so we use div as a workaround.\nThis approach is accessible with the addition of and functions consistently across all browsers.": "Why div? Safari has a CSS bug since 2008 that prevents button elements from being focused, so we use div as a workaround.\nThis approach is accessible with the addition of and functions consistently across all browsers.",
  "This dropdown closes when focus is lost. Avoid placing elements in it that remove focus from dropdown content. For example a element inside the dropdown.": "This dropdown closes when focus is lost. Avoid placing elements in it that remove focus from dropdown content. For example a element inside the dropdown.",
  ":INFO: is the unique ID of the popover content. / is the unique name of the anchor.": ":INFO: is the unique ID of the popover content. / is the unique name of the anchor.",
  ":INFO: CSS Anchor Positioning is a new standard but isn't yet supported in Firefox and Safari ( caniuse.com ). In those browsers, the dropdown will appear centered like a modal. There's also this polyfill that can be helpful.": ":INFO: CSS Anchor Positioning is a new standard but isn't yet supported in Firefox and Safari ( caniuse.com ). In those browsers, the dropdown will appear centered like a modal. There's also this polyfill that can be helpful.",
  ":INFO: Why div? Safari has a CSS bug since 2008 that prevents button elements from being focused, so we use div as a workaround.\nThis approach is accessible with the addition of and functions consistently across all browsers.": ":INFO: Why div? Safari has a CSS bug since 2008 that prevents button elements from being focused, so we use div as a workaround.\nThis approach is accessible with the addition of and functions consistently across all browsers.",
  ":INFO: This dropdown closes when focus is lost. Avoid placing elements in it that remove focus from dropdown content. For example a element inside the dropdown.": ":INFO: This dropdown closes when focus is lost. Avoid placing elements in it that remove focus from dropdown content. For example a element inside the dropdown.",
  "Resize screen to see changes": "Resize screen to see changes",
  "Structure": "Structure",
  "Functionality": "Functionality",
  "Change screen size to show/hide menu": "Change screen size to show/hide menu",
  "Sidebar is always visible on large screen, can be toggled on small screen because of lg:drawer-open class": "Sidebar is always visible on large screen, can be toggled on small screen because of lg:drawer-open class",
  "Drawer is a grid layout that can show/hide a sidebar on the left or right side of the page, based on the screen size or based on the value of a checkbox. Drawer must be the parent element of the content and sidebar.": "Drawer is a grid layout that can show/hide a sidebar on the left or right side of the page, based on the screen size or based on the value of a checkbox. Drawer must be the parent element of the content and sidebar.",
  "Drawer sidebar is hidden by default.\nYou can make it visible on larger screens using class (or using other responsive prefixes: sm, md, lg, xl)": "Drawer sidebar is hidden by default.\nYou can make it visible on larger screens using class (or using other responsive prefixes: sm, md, lg, xl)",
  "You can check/uncheck the checkbox using JavaScript or by clicking the tag which is assigned to the hidden checkbox": "You can check/uncheck the checkbox using JavaScript or by clicking the tag which is assigned to the hidden checkbox",
  "Opening a drawer adds a scrollbar-gutter to the page to avoid layout shift on operating systems that have a fixed scrollbar. If you don't want to use this feature, you can exclude .": "Opening a drawer adds a scrollbar-gutter to the page to avoid layout shift on operating systems that have a fixed scrollbar. If you don't want to use this feature, you can exclude .",
  ":INFO: Opening a drawer adds a scrollbar-gutter to the page to avoid layout shift on operating systems that have a fixed scrollbar. If you don't want to use this feature, you can exclude .": ":INFO: Opening a drawer adds a scrollbar-gutter to the page to avoid layout shift on operating systems that have a fixed scrollbar. If you don't want to use this feature, you can exclude .",
  "For pagination, we use join component to show multiple links or buttons next to each other.": "For pagination, we use join component to show multiple links or buttons next to each other.",
  "is a hidden radio at the start to allow users to remove their rating.": "is a hidden radio at the start to allow users to remove their rating.",
  "Items in each rating should have unique attributes to avoid conflicts with other ratings on the same page.": "Items in each rating should have unique attributes to avoid conflicts with other ratings on the same page.",
  ":INFO: Items in each rating should have unique attributes to avoid conflicts with other ratings on the same page.": ":INFO: Items in each rating should have unique attributes to avoid conflicts with other ratings on the same page.",
  "daisyUI supports 3 calendar libraries": "daisyUI supports 3 calendar libraries",
  "1. Cally Calendar": "1. Cally Calendar",
  "Example using daisyUI styles": "Example using daisyUI styles",
  "Example using daisyUI styles and daisyUI dropdown": "Example using daisyUI styles and daisyUI dropdown",
  "2. Pikaday Calendar": "2. Pikaday Calendar",
  "Pikaday CDN Example": "Pikaday CDN Example",
  "Pikaday Svelte Example": "Pikaday Svelte Example",
  "Pikaday Vue Example": "Pikaday Vue Example",
  "Pikaday React Example": "Pikaday React Example",
  "3. React Day Picker calendar": "3. React Day Picker calendar",
  "React Day Picker Example": "React Day Picker Example",
  "svelte:head": "svelte:head",
  "You can also use the native HTML for a date picker. Read more": "You can also use the native HTML for a date picker. Read more",
  "daisyUI includes styles for 3 popular calendar libraries. Use any of them, based on your needs. You don't need to import the CSS files for these libraries. daisyUI will style them automatically.": "daisyUI includes styles for 3 popular calendar libraries. Use any of them, based on your needs. You don't need to import the CSS files for these libraries. daisyUI will style them automatically.",
  "Cally web component - Works everywhere": "Cally web component - Works everywhere",
  "Pikaday - Works everywhere": "Pikaday - Works everywhere",
  "React Day picker - React only": "React Day picker - React only",
  "Cally is a web component calendar and it works everywhere. Read the docs": "Cally is a web component calendar and it works everywhere. Read the docs",
  "Pikaday is a JS datepicker library and you can use it from CDN or as a JS dependency Read the docs": "Pikaday is a JS datepicker library and you can use it from CDN or as a JS dependency Read the docs",
  "React Day Picker is a flexible date picker component for React. Read the docs": "React Day Picker is a flexible date picker component for React. Read the docs",
  ":INFO: You can also use the native HTML for a date picker. Read more": ":INFO: You can also use the native HTML for a date picker. Read more",
  "Each set of radio inputs should have unique attributes to avoid conflicts with other sets of radio inputs on the same page.": "Each set of radio inputs should have unique attributes to avoid conflicts with other sets of radio inputs on the same page.",
  ":INFO: Each set of radio inputs should have unique attributes to avoid conflicts with other sets of radio inputs on the same page.": ":INFO: Each set of radio inputs should have unique attributes to avoid conflicts with other sets of radio inputs on the same page.",
  "writing an invalid email address applies error color to the input. Valid email address applies success color.": "writing an invalid email address applies error color to the input. Valid email address applies success color.",
  "If value is invalid, a hint text appears below the input.": "If value is invalid, a hint text appears below the input.",
  "Click the button before picking an option to see the error color.": "Click the button before picking an option to see the error color.",
  "class will be invisible if it comes after a class, then if the input is invalid, will get visible. still occupies space even if it's invisible because we don't want a layout shift when the hint appears. If you prefer to hide the hint when it's not visible, add class to . It will take no space when it's hidden, and if input is invalid, it will appear and take space.": "class will be invisible if it comes after a class, then if the input is invalid, will get visible. still occupies space even if it's invisible because we don't want a layout shift when the hint appears. If you prefer to hide the hint when it's not visible, add class to . It will take no space when it's hidden, and if input is invalid, it will appear and take space.",
  ":INFO: class will be invisible if it comes after a class, then if the input is invalid, will get visible. still occupies space even if it's invisible because we don't want a layout shift when the hint appears. If you prefer to hide the hint when it's not visible, add class to . It will take no space when it's hidden, and if input is invalid, it will appear and take space.": ":INFO: class will be invisible if it comes after a class, then if the input is invalid, will get visible. still occupies space even if it's invisible because we don't want a layout shift when the hint appears. If you prefer to hide the hint when it's not visible, add class to . It will take no space when it's hidden, and if input is invalid, it will appear and take space.",
  "changes position based on resolution": "changes position based on resolution",
  "Even if join-item is not a direct child of the group, it still gets the style": "Even if join-item is not a direct child of the group, it still gets the style",
  "you need to change the span text and the CSS variable using JS. Value must be a number between 0 and 99.": "you need to change the span text and the CSS variable using JS. Value must be a number between 0 and 99.",
  ":INFO: you need to change the span text and the CSS variable using JS. Value must be a number between 0 and 99.": ":INFO: you need to change the span text and the CSS variable using JS. Value must be a number between 0 and 99.",
  "We can use input class for the parent and put anything inside it": "We can use input class for the parent and put anything inside it",
  "Input types": "Input types",
  "class can be used for any input field type. Including , , , , , , , , , , ,": "class can be used for any input field type. Including , , , , , , , , , , ,",
  "For , , , use their own class names, as they are not visually input fields.": "For , , , use their own class names, as they are not visually input fields.",
  "Inputs can be used with class to have validation styles. See Validator component for more details.": "Inputs can be used with class to have validation styles. See Validator component for more details.",
  "Accordion uses the same style as the collapse component but it works with radio inputs. You can control which item to be open by checking/unchecking the hidden radio input.": "Accordion uses the same style as the collapse component but it works with radio inputs. You can control which item to be open by checking/unchecking the hidden radio input.",
  ":INFO: Accordion uses the same style as the collapse component but it works with radio inputs. You can control which item to be open by checking/unchecking the hidden radio input.": ":INFO: Accordion uses the same style as the collapse component but it works with radio inputs. You can control which item to be open by checking/unchecking the hidden radio input.",
  ":INFO: All radio inputs with the same name work together and only one of them can be open at a time. If you have more than one set of accordion items on a page, use different names for the radio inputs on each set.": ":INFO: All radio inputs with the same name work together and only one of them can be open at a time. If you have more than one set of accordion items on a page, use different names for the radio inputs on each set.",
  "collapse-open and collapse-close doesn't work with this method. You can add/remove open attribute to the details instead": "collapse-open and collapse-close doesn't work with this method. You can add/remove open attribute to the details instead",
  "Use Tailwind CSS and utilities to apply style when parent div is focused": "Use Tailwind CSS and utilities to apply style when parent div is focused",
  "Use Tailwind CSS and utilities to apply style when sibling checkbox is checked": "Use Tailwind CSS and utilities to apply style when sibling checkbox is checked",
  "Also see accordion examples": "Also see accordion examples",
  ":INFO: Also see accordion examples": ":INFO: Also see accordion examples",
  "This slider works with anchor links so the browser will snap vertically to the image when you click buttons.": "This slider works with anchor links so the browser will snap vertically to the image when you click buttons.",
  "Use toggle class for a label, put a checkbox and 2 icons inside it.": "Use toggle class for a label, put a checkbox and 2 icons inside it.",
  "square aspect ratio or with rounded corners": "square aspect ratio or with rounded corners",
  "Default": "Default",
  "Neutral Primary Secondary Accent Info Success Warning Error": "Neutral Primary Secondary Accent Info Success Warning Error",
  "Default Primary Secondary Accent Info Success Warning Error": "Default Primary Secondary Accent Info Success Warning Error",
  "Ghost Link": "Ghost Link",
  "Wide": "Wide",
  "Link Button": "Link Button",
  "Disabled using attribute Disabled using class name": "Disabled using attribute Disabled using class name",
  "block": "block",
  "soon": "soon",
  "Click me": "Click me",
  "Radial progress needs CSS variable to work. To change the size, use CSS variable which has a default value of . To change the thickness, use CSS variable which is 10% of the size by default.": "Radial progress needs CSS variable to work. To change the size, use CSS variable which has a default value of . To change the thickness, use CSS variable which is 10% of the size by default.",
  "For Radial progress we need to use a instead of the tag because browsers can't show text inside tag, and Firefox doesn’t render pseudo-elements inside tag at all. Adding makes it accessible to screen readers as well.": "For Radial progress we need to use a instead of the tag because browsers can't show text inside tag, and Firefox doesn’t render pseudo-elements inside tag at all. Adding makes it accessible to screen readers as well.",
  ":INFO: Radial progress needs CSS variable to work. To change the size, use CSS variable which has a default value of . To change the thickness, use CSS variable which is 10% of the size by default.": ":INFO: Radial progress needs CSS variable to work. To change the size, use CSS variable which has a default value of . To change the thickness, use CSS variable which is 10% of the size by default.",
  ":INFO: For Radial progress we need to use a instead of the tag because browsers can't show text inside tag, and Firefox doesn’t render pseudo-elements inside tag at all. Adding makes it accessible to screen readers as well.": ":INFO: For Radial progress we need to use a instead of the tag because browsers can't show text inside tag, and Firefox doesn’t render pseudo-elements inside tag at all. Adding makes it accessible to screen readers as well.",
  "By default, the second child of the will fill the remaining space. You can use on another child to make it fill the remaining space instead.": "By default, the second child of the will fill the remaining space. You can use on another child to make it fill the remaining space instead.",
  ":INFO: By default, the second child of the will fill the remaining space. You can use on another child to make it fill the remaining space instead.": ":INFO: By default, the second child of the will fill the remaining space. You can use on another child to make it fill the remaining space instead.",
  "you can open/close the submenu by adding/removing menu-dropdown-show class using JS": "you can open/close the submenu by adding/removing menu-dropdown-show class using JS",
  "Theme Controller changes the theme using CSS only. You can then use JS to save the input state in the server or localStorage if you want it to persist on page refresh. Here's a React example to save checkbox state in local storage: Stackblitz": "Theme Controller changes the theme using CSS only. You can then use JS to save the input state in the server or localStorage if you want it to persist on page refresh. Here's a React example to save checkbox state in local storage: Stackblitz",
  ":INFO: Theme Controller changes the theme using CSS only. You can then use JS to save the input state in the server or localStorage if you want it to persist on page refresh. Here's a React example to save checkbox state in local storage: Stackblitz": ":INFO: Theme Controller changes the theme using CSS only. You can then use JS to save the input state in the server or localStorage if you want it to persist on page refresh. Here's a React example to save checkbox state in local storage: Stackblitz",
  "You can use and classes to set the width and height of the stack, making all items the same size.": "You can use and classes to set the width and height of the stack, making all items the same size.",
  ":INFO: You can use and classes to set the width and height of the stack, making all items the same size.": ":INFO: You can use and classes to set the width and height of the stack, making all items the same size.",
  "A HTML from for filtering items": "A HTML from for filtering items",
  "Use this if you can't use a HTML form for some reason": "Use this if you can't use a HTML form for some reason",
  "There are 3 methods to use modals": "There are 3 methods to use modals",
  "Method 1. HTML dialog element": "Method 1. HTML dialog element",
  "Modal goes bottom on SM screen size, goes middle on MD screen size": "Modal goes bottom on SM screen size, goes middle on MD screen size",
  "Method 2. checkbox": "Method 2. checkbox",
  "Method 3. using anchor links": "Method 3. using anchor links",
  "Using HTML element It needs JS to open but it has better accessibility and we can close it using key": "Using HTML element It needs JS to open but it has better accessibility and we can close it using key",
  "Using checkbox A hidden to control the sate of modal and to check/uncheck the checkbox and open/close the modal": "Using checkbox A hidden to control the sate of modal and to check/uncheck the checkbox and open/close the modal",
  "Using anchor links A link adds a parameter to the URL and you only see the modal when the URL has that parameter": "Using anchor links A link adds a parameter to the URL and you only see the modal when the URL has that parameter",
  "Opening a modal adds a scrollbar-gutter to the page to avoid layout shift on operating systems that have a fixed scrollbar. If you don't want to use this feature, you can exclude .": "Opening a modal adds a scrollbar-gutter to the page to avoid layout shift on operating systems that have a fixed scrollbar. If you don't want to use this feature, you can exclude .",
  "HTML dialog element is a native way to create modals. It is accessible and we can close the modal using key. We can open the modal using JS method and close it using method. The ID must be unique for each modal.": "HTML dialog element is a native way to create modals. It is accessible and we can close the modal using key. We can open the modal using JS method and close it using method. The ID must be unique for each modal.",
  "A hidden checkbox can control the state of modal and labels can toggle the checkbox so we can open/close the modal.": "A hidden checkbox can control the state of modal and labels can toggle the checkbox so we can open/close the modal.",
  "open modal": "open modal",
  "A link adds a parameter to the URL and you only see the modal when the URL has that parameter When modal is closed, the page will scroll to the top because of the anchor link.\nAnchor links might not work well on some SPA frameworks. If there are problems, use the other methods": "A link adds a parameter to the URL and you only see the modal when the URL has that parameter When modal is closed, the page will scroll to the top because of the anchor link.\nAnchor links might not work well on some SPA frameworks. If there are problems, use the other methods",
  ":INFO: Opening a modal adds a scrollbar-gutter to the page to avoid layout shift on operating systems that have a fixed scrollbar. If you don't want to use this feature, you can exclude .": ":INFO: Opening a modal adds a scrollbar-gutter to the page to avoid layout shift on operating systems that have a fixed scrollbar. If you don't want to use this feature, you can exclude .",
  "The tag at the beginning or end of each item, displays a line to connect items.": "The tag at the beginning or end of each item, displays a line to connect items.",
  ":INFO: The tag at the beginning or end of each item, displays a line to connect items.": ":INFO: The tag at the beginning or end of each item, displays a line to connect items.",
  "is required for responsivness of the dock in iOS.": "is required for responsivness of the dock in iOS.",
  ":INFO: is required for responsivness of the dock in iOS.": ":INFO: is required for responsivness of the dock in iOS.",
  "don't re-invent <br/>the wheel <br/>every time": "매번 귀찮은 일을 반복하지 마세요"
}