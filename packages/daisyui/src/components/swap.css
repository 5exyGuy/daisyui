.swap {
  @apply relative inline-grid cursor-pointer place-content-center align-middle select-none;

  input {
    @apply appearance-none;
    border: none;
  }

  > * {
    @apply col-start-1 row-start-1;
    transition-property: transform, rotate, opacity;
    transition-duration: 0.2s;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }

  .swap-on,
  .swap-indeterminate,
  input:indeterminate ~ .swap-on {
    @apply opacity-0;
  }

  input:checked,
  input:indeterminate {
    & ~ .swap-off {
      @apply opacity-0;
    }
  }

  input:checked ~ .swap-on,
  input:indeterminate ~ .swap-indeterminate {
    @apply opacity-100;
  }
}

.swap-active {
  .swap-off {
    @apply opacity-0;
  }

  .swap-on {
    @apply opacity-100;
  }
}

.swap-rotate {
  .swap-on,
  .swap-indeterminate,
  input:indeterminate ~ .swap-on {
    @apply rotate-45;
  }

  input:checked,
  input:indeterminate {
    & ~ .swap-on {
      @apply rotate-0;
    }

    & ~ .swap-off {
      @apply -rotate-45;
    }
  }

  &:where(.swap-active) {
    & ~ .swap-on {
      @apply rotate-0;
    }

    .swap-off {
      @apply -rotate-45;
    }
  }
}

.swap-flip {
  transform-style: preserve-3d;
  perspective: 20rem;

  .swap-on,
  .swap-indeterminate,
  input:indeterminate ~ .swap-on {
    transform: rotateY(180deg);
    backface-visibility: hidden;
    @apply opacity-100;
  }

  input:checked,
  input:indeterminate {
    & ~ .swap-on {
      transform: rotateY(0deg);
    }

    & ~ .swap-off {
      transform: rotateY(-180deg);
      backface-visibility: hidden;
      @apply opacity-100;
    }
  }

  &:where(.swap-active) {
    & ~ .swap-on {
      transform: rotateY(0deg);
    }

    & ~ .swap-off {
      transform: rotateY(-180deg);
      backface-visibility: hidden;
      @apply opacity-100;
    }
  }
}
